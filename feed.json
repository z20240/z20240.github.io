{
    "version": "https://jsonfeed.org/version/1",
    "title": "Let's Life",
    "subtitle": "Les's Blog",
    "icon": "https://z20240.github.io/images/favicon.ico",
    "description": "記錄生活、工作、大小事",
    "home_page_url": "https://z20240.github.io",
    "items": [
        {
            "id": "https://z20240.github.io/Tech/NodeJs/NestJs/2023-05-05-NestJs-%E4%B8%80%E5%80%8B%E5%AE%8C%E6%95%B4%E4%B8%94%E5%84%AA%E9%9B%85%E7%9A%84-NodeJs-Server-%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%A1%88/",
            "url": "https://z20240.github.io/Tech/NodeJs/NestJs/2023-05-05-NestJs-%E4%B8%80%E5%80%8B%E5%AE%8C%E6%95%B4%E4%B8%94%E5%84%AA%E9%9B%85%E7%9A%84-NodeJs-Server-%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%A1%88/",
            "title": "[NestJs] 一個完整且優雅的 NodeJs Server 解決方案方法",
            "date_published": "2023-05-05T20:00:00.000Z",
            "content_html": "<h1 id=\"nestjs-一個完整且優雅的-nodejs-server-解決方案方法\"><a class=\"anchor\" href=\"#nestjs-一個完整且優雅的-nodejs-server-解決方案方法\">#</a> [NestJs]  一個完整且優雅的 NodeJs Server 解決方案方法</h1>\n<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>一直以來，使用 NodeJs 進行 backend 開發，大家最常使用 ExpressJs 或是 Koa 直接開始。然而 ExpressJs, Koa 這類的 NodeJs 框架都是標榜輕量、好設定。在實務上各家公司都會自行搭建各自的專案架構、商業邏輯。</p>\n<p>而不同公司的專案依照各公司的生態與業務就會生出截然不同的專案架構。如果幸運一點，公司有大神前輩，專案的架構可能就還能維持得不錯；然而更多的是許多中小企業的專案因為缺乏規劃與維護，整個專案根本各種「放飛自我」。</p>\n<p>一直以來我都在尋找是否有一款 NodeJs framework 可以整合 nodeJs 後端生態系的專案架構，就像 React 與 Vue 一樣，於是 NestJs 就這樣映入我的視野。</p>\n<h2 id=\"簡介\"><a class=\"anchor\" href=\"#簡介\">#</a> 簡介</h2>\n<p>NestJs 是一款結合了許多後端常使用的 Design Pattern 諸如 OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Reactive Programming), DI (Dependency Injection)，並且默認使用 Typescript 的高效、易擴展的 NodeJs 漸進式框架。</p>\n<p>NestJs 在框架層面設下了許多規範，例如要求使用 Dependency Injection 方式利用各個 module。並且預設就分配好 controller, service, module 等區塊、大量使用 Typescript 的 dectration 來精簡化程式... 等等。這讓 NestJs 的專案架構趨於一致且穩定。</p>\n<h2 id=\"nestjs-專案架構\"><a class=\"anchor\" href=\"#nestjs-專案架構\">#</a> NestJs 專案架構</h2>\n<p>這篇文章我不想花費篇幅在介紹如何安裝 NestJs 專案。這些在網路上已經充斥大量的入門教學。詳細開箱可以直接查看<a href=\"https://docs.nestjs.com/first-steps\"><strong>官網</strong></a> 我將著重在講解 NestJs 預設的專案架構，以及核心的那幾支 ts 是在幹什麼用的。</p>\n<hr />\n<p>在專案創立後，我們可以看到專案結構如下</p>\n<pre><code>|- src\n|   |- app.controller.spec.ts\n|   |- app.controller.ts\n|   |- app.module.ts\n|   |- app.service.ts\n|   |- main.ts\n|- test\n|   |- app.e2e-spec.ts\n|   |- jest-e2e.json\n|- ...\n</code></pre>\n<p>映入眼簾的是  <code>src</code>  中關於 app 的三支檔案  <code>app.controller.ts</code> ,  <code>app.module.ts</code> ,  <code>app.service.ts</code>  。另外會看到  <code>main.ts</code>  這支是整個程式的入口。</p>\n<p>首先我們先有個簡略的瞭解，NestJs 使用的是  <code>Controller -&gt; Service -&gt; Dao</code>  的三層式架構</p>\n<p><img data-src=\"image-20230506015142503.png\" alt=\"image-20230506015142503.png\" /></p>\n<p>由 Controller 層作為 API 的 Entrypoint；依序在 Service 層調用能夠操作 Database 的 Dao 進行業務處理。</p>\n<p>因此順著這個架構，我們就可以來理一理這幾支程式幹了些什麼。</p>\n<h3 id=\"maints\"><a class=\"anchor\" href=\"#maints\">#</a> main.ts</h3>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> NestFactory <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/core'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppModule <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.module'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> NestFactory<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>AppModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">await</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><code>AppModule</code>   是整個專案的 Root Module.</p>\n<p><img data-src=\"image-20230506023655391.png\" alt=\"image-20230506023655391.png\" /></p>\n<p>以官網的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLm5lc3Rqcy5jb20vbW9kdWxlcw==\">示例圖</span>來講解，module 可以再 inject 其他的 modules，因此整個 NestJs 專案都是以 module 為單位建構起來的。</p>\n<h3 id=\"appmodulets\"><a class=\"anchor\" href=\"#appmodulets\">#</a> app.module.ts</h3>\n<p>接下來看到這支程式</p>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Module <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppController <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.controller'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Module</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  imports<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  controllers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppController<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  providers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>AppService<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppModule</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>@Module</code>  是 NestJs 提供的 dectorator。這個 decorator 扮演者舉足輕重的角色。其將自動將設定綁定到  <code>AppModule</code>  ，使得我們不用額外寫半行 code 就完成 Dependency Injection。  <code>imports</code>  提供了注入口給予使用者注入自己寫的  <code>modules</code> 。被注入的  <code>modules</code>  會可以在  <code>providers</code>  中的  <code>Services</code>  使用。同時  <code>providers</code>  中提供的  <code>Services</code>  也會被注入  <code>controllers</code>  中的  <code>Controllers</code> 。</p>\n<p>我們可以看一下  <code>AppController</code>  與  <code>AppService</code>  這兩支的使用方法，就可以大略瞭解。</p>\n<h3 id=\"appservice\"><a class=\"anchor\" href=\"#appservice\">#</a> app.service</h3>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Injectable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在初始專案中，NestJs 很好心地已經定義了一個可以被呼叫的 function (Hello World) 給我們進行測試。</p>\n<p>其中  <code>@Injectable()</code>  一樣是 NestJs 提供的 decorator。用途是告訴 NestJs 這個 Service 是可以被用來注入到其他的 provider。缺少這個 decorator，NestJs 就無法將此 class 注入到其他地方使用。</p>\n<h3 id=\"appcontrollers\"><a class=\"anchor\" href=\"#appcontrollers\">#</a> app.controllers</h3>\n<figure class=\"highlight typescript\"><figcaption data-lang=\"typescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Controller<span class=\"token punctuation\">,</span> Get <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@nestjs/common'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> AppService <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./app.service'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Controller</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> appService<span class=\"token operator\">:</span> AppService<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Get</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>appService<span class=\"token punctuation\">.</span><span class=\"token function\">getHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 controller 中，我們可以看到儘管我們並沒有在 AppController 的 instance 中顯式地將  <code>AppService</code>  pass 進來，但是我們卻可以在 controller 中使用  <code>this.appService</code>  。</p>\n<p>這就是利用了  <code>module</code>  中的  <code>@Module</code>  decorator 做到的依賴注入。</p>\n<hr />\n<p>到這邊，我們算是非常粗淺的瞭解了 NestJs 的專案架構。但是 NestJs 遠不止這些。</p>\n<p>因此未來我會繼續整理 NestJs 這套 Framework 的使用心得與其他解釋。</p>\n<p>預計下一篇會先做一個簡單的 CRUD 來試試手。</p>\n",
            "tags": [
                "Tech",
                "NodeJs",
                "NestJs",
                "nodejs",
                "nestjs"
            ]
        },
        {
            "id": "https://z20240.github.io/README/",
            "url": "https://z20240.github.io/README/",
            "title": "",
            "date_published": "2023-05-05T14:24:02.848Z",
            "content_html": "<pre><code>_posts\n├─ .DS_Store\n├─ .obsidian\n│  ├─ app.json\n│  ├─ appearance.json\n│  ├─ community-plugins.json\n│  ├─ core-plugins-migration.json\n│  ├─ core-plugins.json\n│  ├─ graph.json\n│  ├─ hotkeys.json\n│  ├─ plugins\n│  │  ├─ dataview\n│  │  │  ├─ main.js\n│  │  │  ├─ manifest.json\n│  │  │  └─ styles.css\n│  │  ├─ obsidian-custom-attachment-location\n│  │  │  ├─ data.json\n│  │  │  ├─ main.js\n│  │  │  └─ manifest.json\n│  │  ├─ oz-clear-unused-images\n│  │  │  ├─ data.json\n│  │  │  ├─ main.js\n│  │  │  ├─ manifest.json\n│  │  │  └─ styles.css\n│  │  └─ oz-image-plugin\n│  │     ├─ main.js\n│  │     ├─ manifest.json\n│  │     └─ styles.css\n│  └─ workspace.json\n├─ Life\n│  ├─ 2018-11-20-acoustune-hs-1670ss-開箱\n│  │  ├─ 1*-yfWDrN2GzoQO2C6gQ2XTQ.jpeg\n│  │  ├─ 1*7aoJgL220xL-tFoRY6kUAg.jpeg\n│  │  ├─ 1*9-bNQa3CkfN3ndevbznQfQ.jpeg\n│  │  ├─ 1*NuqJ052KUcZ1KFg_pUVOEw.jpeg\n│  │  ├─ 1*NyeufHUF9zEBLky9JthsWg.jpeg\n│  │  ├─ 1*R8GdbDiVBwc1FH66RdnTMQ.jpeg\n│  │  ├─ 1*Svrsorgnu80KRh9hD7Fmcg.jpeg\n│  │  ├─ 1*cFYgIp_Hn3BdGWw3dsNHxg.jpeg\n│  │  ├─ 1*gy2gqRpqybz-OttMaQyKSQ.jpeg\n│  │  ├─ 1*iH3cyusE18-dZLvUhcESfQ.jpeg\n│  │  └─ 1*uSaXrJ8NKMiZYpiOAXzv6w.jpeg\n│  ├─ 2018-11-20-acoustune-hs-1670ss-開箱.md\n│  ├─ 2019-04-11-開箱-bose-soundsport-free-真無線耳機\n│  │  ├─ 0*C8Uuel6K9TLobpsU.jpg\n│  │  ├─ 0*b8wYEwL4I2K-hgV5.jpg\n│  │  ├─ 1*0FFiyVoqzOSy2ZaZYkJRuw.jpeg\n│  │  ├─ 1*2WDjXGqV_A9DnGsbOFBAgA.jpeg\n│  │  ├─ 1*Ckt2qhUxim75wSmkO6LiUg.jpeg\n│  │  ├─ 1*Mw-gQkLnr2pklOYQQcwNWg.jpeg\n│  │  ├─ 1*NHlOughefijUJ9sZYtq2jg.jpeg\n│  │  ├─ 1*Z9Ckt7pzVvt9eXkx99BADQ.jpeg\n│  │  ├─ 1*x1--JBT1Fqi9yd_7f0sa4w.jpeg\n│  │  └─ 1*zD3aw9lp_FwtHAENs7ZA9w.jpeg\n│  ├─ 2019-04-11-開箱-bose-soundsport-free-真無線耳機.md\n│  ├─ EnglishLearn\n│  │  ├─ Cambly-Lession1.md\n│  │  ├─ Cambly-Lession2\n│  │  ├─ Cambly-Lession2.md\n│  │  ├─ Cambly-Lession3.md\n│  │  ├─ Cambly-Lession4.md\n│  │  ├─ Cambly-Lession5.md\n│  │  ├─ Combly-Lession10.md\n│  │  ├─ Combly-Lession11.md\n│  │  ├─ Combly-Lession12.md\n│  │  ├─ Combly-Lession6.md\n│  │  ├─ Combly-Lession7.md\n│  │  ├─ Combly-Lession8.md\n│  │  ├─ Combly-Lession9.md\n│  │  └─ IELS 字彙.md\n│  └─ Yugioh\n│     ├─ 2018-12-26-開箱-遊戲王-20-週年主角紀念禮盒\n│     │  ├─ 1*2aOyC0T8ZsQpHBT0WwjHTQ.jpeg\n│     │  ├─ 1*97zAjEQrtAjtrm37o42Jjw.jpeg\n│     │  ├─ 1*Aj3A5Y22QiDcumIY2GLFPQ.jpeg\n│     │  ├─ 1*HAEOiTunohsan1yMekeR8A.jpeg\n│     │  ├─ 1*TMOZMZ9w34iROT-yPJe27g.jpeg\n│     │  ├─ 1*VUKE7WTdVK_J3y59hFnpXw.jpeg\n│     │  ├─ 1*_iKjJnyoI0EqcJFheabWLw.jpeg\n│     │  ├─ 1*cCRQ-_1U9-CKbiUMYEmGqQ.jpeg\n│     │  ├─ 1*elm0N6VCcje-QUq3WwGUSw.jpeg\n│     │  ├─ 1*nJzKx574r1ozlU94Fqj5ww.jpeg\n│     │  ├─ 1*sXiKkplvhVoldC1h9F-TrA.jpeg\n│     │  ├─ 1*zi92_ossbAImer7YlCy0Xg.jpeg\n│     │  └─ 61f4_hqdefault.jpg\n│     └─ 2018-12-26-開箱-遊戲王-20-週年主角紀念禮盒.md\n├─ Tech\n│  ├─ Algorithm\n│  │  ├─ 2018-12-14-關於組織樹狀圖的資料結構設計方法\n│  │  │  └─ 1*lwaDg8aL0XtdEndSDBtyvQ.png\n│  │  ├─ 2018-12-14-關於組織樹狀圖的資料結構設計方法.md\n│  │  ├─ 2018-12-26-遊戲中的全服排行是怎麼實現的\n│  │  │  └─ 1*MtDmEH_o_sKxGpsUYIZ4WQ.png\n│  │  ├─ 2018-12-26-遊戲中的全服排行是怎麼實現的.md\n│  │  ├─ 2019-10-19-關於-assignment-賦值-這檔事\n│  │  │  ├─ 1*HjDVd26Zp4cGDEafYv0CRA.gif\n│  │  │  ├─ 1*OgUcvg2jn61c4eUONdw_iQ.png\n│  │  │  ├─ 1*_AKd2MivrwKGISeg-6wm3g.png\n│  │  │  ├─ 1*f0wyC8MYfYzxRoXIAiJOkA.gif\n│  │  │  ├─ 1*fpQiGbnKfS9ulOOeQT9OqA.png\n│  │  │  └─ 1*oRFnzEOdLwhxpRltCOhFww.png\n│  │  └─ 2019-10-19-關於-assignment-賦值-這檔事.md\n│  ├─ Aws Architecture\n│  │  ├─ Aws-architecture-IAM\n│  │  │  ├─ image-20230108104318658.png\n│  │  │  ├─ image-20230108105326254.png\n│  │  │  ├─ image-20230108105919211.png\n│  │  │  ├─ image-20230108113854062.png\n│  │  │  ├─ image-20230108114033352.png\n│  │  │  ├─ image-20230108115828306.png\n│  │  │  ├─ image-20230108120035484.png\n│  │  │  ├─ image-20230108120359228.png\n│  │  │  ├─ image-20230108120532329.png\n│  │  │  └─ image-20230108122050789.png\n│  │  ├─ Aws-architecture-IAM.md\n│  │  └─ Aws-architecture-Serverless.md\n│  ├─ Data Storage\n│  │  ├─ 2018-10-27-在-debian-9-中安裝-redis-並使其成為-service\n│  │  │  └─ 1*DPd3_f1ruu3rrkgaFeo2Ug.png\n│  │  ├─ 2018-10-27-在-debian-9-中安裝-redis-並使其成為-service.md\n│  │  ├─ 2020-07-27-mongodb-如何-auto-increment-地插入資料\n│  │  │  └─ 1*K6syln_71vBX22lssiVQdQ.png\n│  │  ├─ 2020-07-27-mongodb-如何-auto-increment-地插入資料.md\n│  │  ├─ 2021-05-16-sql-mysql-postgresql-與-mongodb-如何大量產生測試資料\n│  │  │  ├─ 1*5I9wbUun0tnHjHOiebc06Q.png\n│  │  │  ├─ 1*TvJnGY8LvtvZok6MRDLg9g.png\n│  │  │  └─ 1*u7tqvIP1aNErGnjuZjRcdg.png\n│  │  ├─ 2021-05-16-sql-mysql-postgresql-與-mongodb-如何大量產生測試資料.md\n│  │  ├─ 2022-10-08-sql-postgres-遇到-out-of-shared-memory-問題\n│  │  │  ├─ 1*4K08BRP-ucCyW_t2PddHdw.png\n│  │  │  └─ 1*XoswqaeN0ZhTSGGzHSzrCA.png\n│  │  └─ 2022-10-08-sql-postgres-遇到-out-of-shared-memory-問題.md\n│  ├─ Flutter\n│  │  ├─ Flutter學習-flutter介紹&amp;Dart簡介.md\n│  │  ├─ Flutter學習-環境安裝與錯誤處理\n│  │  │  ├─ image-20230201034918514.png\n│  │  │  ├─ image-20230201035252043.png\n│  │  │  ├─ image-20230201035715344.png\n│  │  │  ├─ image-20230201040009795.png\n│  │  │  ├─ image-20230201040236174.png\n│  │  │  ├─ image-20230201040518776.png\n│  │  │  ├─ image-20230201040716354.png\n│  │  │  └─ image-20230201142130471.png\n│  │  └─ Flutter學習-環境安裝與錯誤處理.md\n│  ├─ Frontend\n│  │  ├─ 2018-11-16-html5-script-tag-新增的屬性-async-defer-差異\n│  │  │  └─ 1*nzoXzwWon5ZXshZeg1z1HQ.png\n│  │  ├─ 2018-11-16-html5-script-tag-新增的屬性-async-defer-差異.md\n│  │  ├─ 2018-11-30-javascript-使用-array-reduce-進行-object-array-的加總.md\n│  │  ├─ 2018-11-30-javascript-使用-proxy-為-object-代理進行前處理\n│  │  │  ├─ 1*6MSzZ5OvyxqDuyalvR_06w.png\n│  │  │  ├─ 1*9Nc863A5wyKSKku5PTQ4EQ.png\n│  │  │  ├─ 1*E991s74NMYV1B_BwNq8yjg.png\n│  │  │  ├─ 1*dQFrWGA_0bwUJLt6kuW_Xw.png\n│  │  │  ├─ 1*eTPeG7b-fLwBd-cG2n6faA.jpeg\n│  │  │  ├─ 1*gUcgBRpUxCooNjH3ahXDlg.png\n│  │  │  ├─ 1*tgiozgmsSMfOhH_khtHemQ.png\n│  │  │  └─ 1*z4kyV7mBHcj23x1w6cM3WQ.png\n│  │  ├─ 2018-11-30-javascript-使用-proxy-為-object-代理進行前處理.md\n│  │  ├─ 2018-12-09-javascript-es6-spread-syntax-展開語法\n│  │  │  └─ 1*dkobBMlN8xVswrMjOks0fg.png\n│  │  ├─ 2018-12-09-javascript-es6-spread-syntax-展開語法.md\n│  │  ├─ 2019-03-20-javascript-arrow-function-與一般匿名-function-對-this-的行為比較\n│  │  │  ├─ 1*7Q_s3gTXBY_sSJh5gjqrRQ.png\n│  │  │  ├─ 1*Cm0_6X4jAtppmLvZrmwo_w.png\n│  │  │  ├─ 1*Cnx_pZGXJIvMXwxKdmhhoA.png\n│  │  │  ├─ 1*Dcd2kioV9JxbXH2CpCezmA.png\n│  │  │  ├─ 1*RPWccRV1yCOx8vCJrDrZDg.png\n│  │  │  ├─ 1*S6lnBgaams7GhdI3DZRoVw.png\n│  │  │  ├─ 1*WOO2JgJOgaqgRmmr6wMOag.png\n│  │  │  ├─ 1*bR0wgT8jDUHwx0N8hgdGIg.png\n│  │  │  ├─ 1*k4PJLMN3zfT1mEKazVx3qg.png\n│  │  │  ├─ 1*qdqCiSptePhqISVU0BxM4w.png\n│  │  │  ├─ 1*whd2x_7DTtrRpd-qEF29OQ.png\n│  │  │  └─ 1*xcHCASkTrupfccVyKwl62A.png\n│  │  ├─ 2019-03-20-javascript-arrow-function-與一般匿名-function-對-this-的行為比較.md\n│  │  ├─ 2019-07-05-javascript-functional-programming-一文到底全紀錄\n│  │  │  ├─ 0*FRlb4wUBNM256lEW.png\n│  │  │  ├─ 1*0vFSAXJvIbSKzrYki-5ZBQ.png\n│  │  │  ├─ 1*38kX52naL-_q99y81bLAIQ.png\n│  │  │  ├─ 1*4TWSbRZ8s01gOMIU78uE5g.png\n│  │  │  ├─ 1*7bvDeksvOHZco5EC3jfFcA.png\n│  │  │  ├─ 1*9952DfkuCXuAFpsJ8a8onQ.png\n│  │  │  ├─ 1*Dj16RgGvNsuKNtVscYAZPg.png\n│  │  │  ├─ 1*EezC0VUV5e5C4V6auKjFVg.png\n│  │  │  ├─ 1*GZYAsRmWTK-OK3klcMjqsA.png\n│  │  │  ├─ 1*JBasiFOr-UGKJDPFqGQr9w.png\n│  │  │  ├─ 1*NeJ_lQCgpOJOlvloqbXrkw.png\n│  │  │  ├─ 1*RwSWFTK6ZI2XRCrgzxCmmQ.png\n│  │  │  ├─ 1*UB2sm5jPeBEm_Ahi_zt6kQ.png\n│  │  │  ├─ 1*Uw06YLV8VaoGz0CV1bYlaQ.png\n│  │  │  ├─ 1*Yaf7JsDuHXXNNRgMwidu8Q.png\n│  │  │  ├─ 1*aqUj3-ra564I2nraS73MVg.png\n│  │  │  ├─ 1*jnnq19nXAVONVyVrAeTMHg.png\n│  │  │  ├─ 1*nZz5pAq9vAWQi6rYMVQDzA.png\n│  │  │  ├─ 1*qyR6kHLrV4AuqK_fAvJfZw.jpeg\n│  │  │  ├─ 1*uXFsWylRWqrdYIoiye14Hw.png\n│  │  │  ├─ 1*xlFR_tW_ldG_yf6LbOF2Bg.png\n│  │  │  ├─ 1*y27xmFmDTPy9VXvK7g7jKg.png\n│  │  │  └─ 1*y7kH_ET09Qlk_yAR3s_zvg.png\n│  │  ├─ 2019-07-05-javascript-functional-programming-一文到底全紀錄.md\n│  │  ├─ 2019-12-30-javascript-point-free-style-如何幫助提高程式可讀性\n│  │  │  ├─ 1*8uA0qRUuqy6G7qMJhLbKnw.jpeg\n│  │  │  └─ 1*itAJHMwn0D-DpWte_sFMxA.png\n│  │  ├─ 2019-12-30-javascript-point-free-style-如何幫助提高程式可讀性.md\n│  │  ├─ 2020-04-05-javascript-使用js-xlsx-將-json-匯出成-excel\n│  │  │  ├─ 1*GIAk84EW7m7PHUT8p8DcEA.png\n│  │  │  └─ 1*wZSJVMQEhojzrH8_U6GGzg.png\n│  │  ├─ 2020-04-05-javascript-使用js-xlsx-將-json-匯出成-excel.md\n│  │  ├─ 2020-08-25-javascript-es6-模板字串-template-string-知多少\n│  │  │  ├─ 0*aUXamM8t0mHhFD-K.png\n│  │  │  ├─ 1*-mORctsYOsPTVCBunpYYrg.png\n│  │  │  ├─ 1*MRkZgd6EA6KjPDyJ9BbhcA.png\n│  │  │  ├─ 1*VHuOhbHJGcfzk-MU2EWN8Q.png\n│  │  │  ├─ 1*VNU7p6sERC8as6j8ti2-LQ.png\n│  │  │  ├─ 1*Vluuu2ZEkswFpbzZ5ULvug.png\n│  │  │  ├─ 1*iNGXaKSPfLZQ5pKaie44XQ.png\n│  │  │  ├─ 1*iqoi254cRLpkUgFUC3IkWg.png\n│  │  │  └─ 1*m4lVm2fHNJtnF0oblHxzEQ.png\n│  │  ├─ 2020-08-25-javascript-es6-模板字串-template-string-知多少.md\n│  │  ├─ 2020-11-13-axios-如何-cancel-已經發出的-request\n│  │  │  ├─ 1*mSPQ2f7osaeXy45N9jLFQw.png\n│  │  │  └─ 1*tsSFPOgWSZcPh9XTEavQwA.gif\n│  │  ├─ 2020-11-13-axios-如何-cancel-已經發出的-request.md\n│  │  ├─ 2021-02-09-front-end-emmet-前端快速開發的神兵利器\n│  │  │  ├─ 0*4D_q0c3hxHQcjjYE.gif\n│  │  │  ├─ 1*-JvloFLYjqUzfVfZjkCG5g.gif\n│  │  │  ├─ 1*4l8SN32JJqXAjF-RKnexwg.gif\n│  │  │  ├─ 1*A_2TRu4IpBPa6kiqKd5gEA.gif\n│  │  │  ├─ 1*IutHuFaDKyL83MZuxHwXNA.gif\n│  │  │  ├─ 1*UyCQppxtpLwqyTFLijikdA.gif\n│  │  │  ├─ 1*ZVzYUKvGMGxVSMVBeFAM3Q.gif\n│  │  │  ├─ 1*bpP5Wasjp58bz3SeU2dT1g.gif\n│  │  │  ├─ 1*c2jZ3I4MSQQAv8S2lGwHqw.gif\n│  │  │  ├─ 1*raTa4R7FKI8NlWqPNXw6Tg.gif\n│  │  │  ├─ 1*rz00s3Dj25n2wbqTPovThQ.gif\n│  │  │  ├─ 1*sF0HVT8G5gfOwiCeToBNCg.gif\n│  │  │  ├─ 1*xYvBbURns_-f3w08g1zVLg.gif\n│  │  │  └─ 1*zYGPsvtn0yFucRQvweP-Ug.gif\n│  │  ├─ 2021-02-09-front-end-emmet-前端快速開發的神兵利器.md\n│  │  ├─ axois-big5網頁獲取造成亂碼的解決方法\n│  │  │  └─ image-20230203152936673.png\n│  │  ├─ axois-big5網頁獲取造成亂碼的解決方法.md\n│  │  └─ vue\n│  │     ├─ 2018-10-27-vue-cli-自定義全局功能的方法\n│  │     │  └─ 1*_De2DFdiagdljCHfHi8t1Q.png\n│  │     ├─ 2018-10-27-vue-cli-自定義全局功能的方法.md\n│  │     ├─ 2018-11-09-vue-components-組件之間的溝通方式\n│  │     │  ├─ 1*3GTVGo8HC5T2o7gPRYocvg.png\n│  │     │  ├─ 1*P7DmOPXjK-MMJ6gr0C4Ueg.png\n│  │     │  ├─ 1*V8TObRwANtKeM90nd_3zWQ.png\n│  │     │  ├─ 1*sfk8gnkC6H57ClwOzh3F7g.png\n│  │     │  └─ 1*vEboBXCSAJD8JN6mWhCkyg.png\n│  │     ├─ 2018-11-09-vue-components-組件之間的溝通方式.md\n│  │     ├─ 2019-02-28-vue-導入-vuex-管理vue專案的狀態\n│  │     │  ├─ 1*5etY7t5mvbS1mbEaPXQEjw.png\n│  │     │  ├─ 1*5j7aDL9u5aiIi1hNbEyA_A.png\n│  │     │  ├─ 1*69hlq-tL3VgqgkwSyWd7ig.png\n│  │     │  ├─ 1*7V17HivTzMV5jpLZrGGfkw.png\n│  │     │  ├─ 1*ARW0v2DY46cETKmRFSchvA.png\n│  │     │  ├─ 1*ATv1f9NPhGSsA2gH7MbAKg.png\n│  │     │  ├─ 1*FiqRo5HmXA4UXDm6AYjlOA.png\n│  │     │  ├─ 1*Gt9bK0mqBAqNdMNTAOAMWQ.png\n│  │     │  ├─ 1*IXaLPY5pGQt9gDYhVdIkxQ.png\n│  │     │  ├─ 1*KIoNyRO6s_52W68Y-0usJw.png\n│  │     │  ├─ 1*Q75rIH_315Io__kcD9AM4Q.png\n│  │     │  ├─ 1*X0zDyFZNlHc7jggXcpbWXA.png\n│  │     │  ├─ 1*gN6ELD_k-DS_p7NQVbz1Pg.png\n│  │     │  ├─ 1*jYbk1zI74FwTJDm5zc2ojQ.png\n│  │     │  ├─ 1*jshtZYf4XAqUvJPzoFI3cw.png\n│  │     │  ├─ 1*oOyGWdDDHyh-U_6LyU8v3w.png\n│  │     │  ├─ 1*q6Sjh7-TyY1uppZY2cUxqg.png\n│  │     │  ├─ 1*sUkKlL2jaBnJHpELYvCmYA.png\n│  │     │  └─ 1*xGGXE-T86azpk0KQWIGaJg.png\n│  │     ├─ 2019-02-28-vue-導入-vuex-管理vue專案的狀態.md\n│  │     ├─ 2019-04-02-vue-筆記-reset-data-in-component\n│  │     │  └─ 1*9qAb4yjDW6L5M5U2kN7MTA.png\n│  │     ├─ 2019-04-02-vue-筆記-reset-data-in-component.md\n│  │     ├─ 2019-04-23-vue-使用-props-async-同步父子組建之間的傳值\n│  │     │  ├─ 1*H-n1CCxFQyh_2GEUTzkN1g.gif\n│  │     │  ├─ 1*JwzyQR1fD-nG3rGjzJ4p2A.png\n│  │     │  └─ 1*nqUfyvov5lTuDc_22b9AGw.gif\n│  │     ├─ 2019-04-23-vue-使用-props-async-同步父子組建之間的傳值.md\n│  │     ├─ 2019-05-15-vuex-在-vscode-中不使用-typescript-也能讓-vuex-讀懂變數的類型\n│  │     │  ├─ 1*CQdDVOxQwLQUaC3IaQloBw.gif\n│  │     │  ├─ 1*HI7gIGHGVIf6to0_1sNgYA.gif\n│  │     │  └─ 1*rjmsDpBmEoP9v2MwubWqOQ.gif\n│  │     ├─ 2019-05-15-vuex-在-vscode-中不使用-typescript-也能讓-vuex-讀懂變數的類型.md\n│  │     ├─ 2019-12-06-vue-聰明使用-keep-alive-達到-cache-目的\n│  │     │  └─ 0*dbUWK1RBu1Gi0dfU.png\n│  │     ├─ 2019-12-06-vue-聰明使用-keep-alive-達到-cache-目的.md\n│  │     ├─ 2022-07-04-vue-nuxt-eslint-prettier-vscode-設定-讓-eslint-自動排版-nuxt-專案\n│  │     │  ├─ 1*CvCOrh9Ylw2-AlkWrb9A4g.png\n│  │     │  ├─ 1*DTodaOdB7g7Y3j-35PopQg.png\n│  │     │  ├─ 1*ET9CfH7oh7cubkTpNch7Xw.png\n│  │     │  ├─ 1*Mvfr8nd_T3OVC6U693GQVA.png\n│  │     │  ├─ 1*WT4Zgzex60odGfhRIgpXxw.png\n│  │     │  ├─ 1*jt_CPBruvGdfc6I_svByEw.png\n│  │     │  ├─ 1*ovYVQpQEWiy2JY0l267wjw.png\n│  │     │  └─ 1*t-XiqWLBCtF_pu_VKsp3XQ.png\n│  │     └─ 2022-07-04-vue-nuxt-eslint-prettier-vscode-設定-讓-eslint-自動排版-nuxt-專案.md\n│  ├─ Hexo\n│  │  ├─ fix-mermaid-parser-issue.md\n│  │  ├─ hello-world.md\n│  │  └─ 特殊語法總集.md\n│  ├─ Linux\n│  │  ├─ 2018-11-02-一個免費的-https-授權工具-certbot\n│  │  │  ├─ 1*8zq2RDV5jutc6xeNKaxqbw.png\n│  │  │  ├─ 1*Hk35_e5NjdEQz19V8RD5SQ.png\n│  │  │  ├─ 1*T6IWR2WL74TP2j3E25_OeA.png\n│  │  │  ├─ 1*Zet2wn3-10GKoOFGhpVENg.png\n│  │  │  ├─ 1*_kcbIqYK2oVj5QzvCzUFSw.png\n│  │  │  └─ 1*dqguGsLydSvCDHEd9q_Lmw.png\n│  │  ├─ 2018-11-02-一個免費的-https-授權工具-certbot.md\n│  │  ├─ 2018-11-03-nginx-如何配置多個網站共用-80-port\n│  │  │  └─ 1*n2ZyAzgVhxl6kXDCbx_CSw.jpeg\n│  │  ├─ 2018-11-03-nginx-如何配置多個網站共用-80-port.md\n│  │  ├─ 2018-11-28-linux-使用-rsync-傳輸-備份兩處的檔案\n│  │  │  └─ 1*8aE93-Wx5KJb7VqO8gi55g.jpeg\n│  │  ├─ 2018-11-28-linux-使用-rsync-傳輸-備份兩處的檔案.md\n│  │  ├─ 2020-07-27-debian-add-apt-repository-command-not-found-問題.md\n│  │  ├─ 2020-07-27-gcp-如何使用-ssh-讓使用者登入-vm-instance\n│  │  │  ├─ 1*Inm9BZzGX2_CRDgxkl3tTg.png\n│  │  │  ├─ 1*Vja4LMw8UAO9vCauM5Gd1g.png\n│  │  │  ├─ 1*WRUx_I2CVf6bp0HCkIKI4A.png\n│  │  │  └─ 1*reygeRRdhsoPxjPNtMNrsw.png\n│  │  ├─ 2020-07-27-gcp-如何使用-ssh-讓使用者登入-vm-instance.md\n│  │  ├─ 2020-07-27-gcp-遇到permission-denied-publickey-怎麼辦\n│  │  │  └─ 1*5SlkKa9VGVM9bmANkqrHYg.png\n│  │  ├─ 2020-07-27-gcp-遇到permission-denied-publickey-怎麼辦.md\n│  │  ├─ 2021-06-07-關於-selinux-policy\n│  │  │  ├─ 1*-S0VPmREwFR2J6GZrnWu3A.png\n│  │  │  ├─ 1*4JcEry75wMdLTp2wkWOSEQ.png\n│  │  │  ├─ 1*o4gpFTbf0gWP-KWY-CnxZQ.png\n│  │  │  └─ 1*sm2kXbOKHi7OHowp5KQfAg.png\n│  │  └─ 2021-06-07-關於-selinux-policy.md\n│  ├─ NodeJs\n│  │  ├─ 2018-11-01-nodejs-解決mysql-error-connection-lost-the-server-closed-the-connection的方法\n│  │  ├─ 2018-11-01-nodejs-解決mysql-error-connection-lost-the-server-closed-the-connection的方法.md\n│  │  ├─ 2018-11-30-javascript-tool-一個自製的-arguments-verify-工具\n│  │  │  ├─ 1*1wijpL-VzOJwIfRmrsrIiw.png\n│  │  │  ├─ 1*CUgOtAwTXR5XVHDfKDJyZQ.png\n│  │  │  ├─ 1*MuobBThfQbpaCcUk6N8NIA.png\n│  │  │  ├─ 1*Qtsjv35DDyiuz_cJHppOww.png\n│  │  │  ├─ 1*UdzgcKGJR7xw7_WmcrKsGg.png\n│  │  │  ├─ 1*dF1NrzEQieKAiABviOcHfg.png\n│  │  │  └─ 1*irkX8ujBhjBZWjyEVCq91g.png\n│  │  ├─ 2018-11-30-javascript-tool-一個自製的-arguments-verify-工具.md\n│  │  ├─ 2019-07-26-node-使用-nodejs-製作自己的-shell-command\n│  │  │  ├─ 0*PFzkc5fnQd1dUylp.png\n│  │  │  ├─ 1*NZ4WH3Av6AsVLcV_PGqlYw.gif\n│  │  │  ├─ 1*bn5tW0xMEpEQyFFSvT9-7w.png\n│  │  │  └─ 1*wj62wymGk5Vxs__-grOL-g.gif\n│  │  ├─ 2019-07-26-node-使用-nodejs-製作自己的-shell-command.md\n│  │  ├─ 2022-05-16-node-如何檢測-node-程式的memory-leak-以及處理-out-of-memory-問題\n│  │  │  ├─ 1*G7HH9z3wGJhG1mLZK-cvoQ.png\n│  │  │  ├─ 1*TnS_yRzEnIKV74ireuA50Q.png\n│  │  │  ├─ 1*hjkYvj6TLmxY9YM16b8Rsw.png\n│  │  │  ├─ 1*ot3-OLwkVSRw-ImSrXxhCw.png\n│  │  │  ├─ 1*r2wJzxZlT7878dhsficsYA.png\n│  │  │  ├─ 1*vE4cxtjQLFRgYckFNgX2eQ.png\n│  │  │  ├─ 1*wZXni_hZC3GxrpjuOegfcA.png\n│  │  │  └─ 1*y7HVRS0fXUw_u3Ypr-VCNg.png\n│  │  ├─ 2022-05-16-node-如何檢測-node-程式的memory-leak-以及處理-out-of-memory-問題.md\n│  │  └─ NestJs\n│  │     ├─ 2023-05-05-NestJs-一個完整且優雅的-NodeJs-Server-解決方案\n│  │     │  └─ image-20230505214440603.png\n│  │     └─ 2023-05-05-NestJs-一個完整且優雅的-NodeJs-Server-解決方案.md\n│  ├─ Others\n│  │  ├─ 2018-10-27-利用卡諾圖化簡布林代數的條件判斷式\n│  │  │  ├─ image-20221227184109572.png\n│  │  │  ├─ image-20221227184115193.png\n│  │  │  ├─ image-20221227184118942.png\n│  │  │  ├─ image-20221227184233480.png\n│  │  │  ├─ image-20221227184237276.png\n│  │  │  └─ image-20221227184241657.png\n│  │  ├─ 2018-10-27-利用卡諾圖化簡布林代數的條件判斷式.md\n│  │  ├─ 2018-12-03-perl-一鍵安裝-perl.md\n│  │  ├─ 2020-11-04-告別-powershell-與-cmd-擁抱-windows-terminal-包括自訂樣式\n│  │  │  ├─ 1*-nI7Q6hnOV6RKIag4XdUQw.png\n│  │  │  ├─ 1*1xbwxWw8CwNf_RNo4VoUNA.png\n│  │  │  ├─ 1*A6Z2EayE-kPdzZM1naNsBw.png\n│  │  │  ├─ 1*Q43c7Cex6esd_k47iqdMoQ.png\n│  │  │  ├─ 1*RBKVWvWz58gDliZ19_gDig.png\n│  │  │  ├─ 1*ToHMLSXBYrKwNgDHjkFR4w.png\n│  │  │  ├─ 1*ccFZQhAqUQnN_VzNVZks5w.png\n│  │  │  ├─ 1*iWY8_kxIAQCq-Sy2Yt4ovQ.png\n│  │  │  ├─ 1*iy_uqJrXLlsLEao75Gpo1w.png\n│  │  │  ├─ 1*koMTJ4hDD1T6GwwKdPXUHA.png\n│  │  │  ├─ 1*tnjjMpf606Nc3hFo5RauNA.png\n│  │  │  ├─ 1*wglfuUP-kzJ0NAlIVFAVEw.png\n│  │  │  └─ 19cf_hqdefault.jpg\n│  │  ├─ 2020-11-04-告別-powershell-與-cmd-擁抱-windows-terminal-包括自訂樣式.md\n│  │  ├─ 2021-02-09-windows-手動移除-新增-移除程式-清單中無法被移除的程式\n│  │  │  ├─ 1*KyjfFojRFu2tKRlqfPlrAA.png\n│  │  │  ├─ 1*_SqNf0EQ2vCvFsO5eM2zvg.png\n│  │  │  ├─ 1*hjrrM9Q7CVlkMtWVlcTkfw.png\n│  │  │  └─ 1*kdfkj20bkBl5VtdXLnA3Zw.png\n│  │  ├─ 2021-02-09-windows-手動移除-新增-移除程式-清單中無法被移除的程式.md\n│  │  ├─ 2021-08-14-tiling-window-management-平鋪式視窗管理-amethyst-yabai\n│  │  │  ├─ 1*--6z5M0BwxkCgclrwDuYsQ.gif\n│  │  │  ├─ 1*0-vM8MdNwqYIa38cHmDIqw.gif\n│  │  │  ├─ 1*3B9-BHm02eQC4mlV_Uh7dg.gif\n│  │  │  ├─ 1*5NPkQIS5TR09HiaxkU6Bwg.gif\n│  │  │  ├─ 1*5ZVbxolpIuH9BY8FK4PBIg.gif\n│  │  │  ├─ 1*9swWR0x1rBw6aDOhFwLACQ.gif\n│  │  │  ├─ 1*Ciz6Od9ySfrVtkiEs72l_w.png\n│  │  │  ├─ 1*HKWfSFdae-qERrku4XnJKA.gif\n│  │  │  ├─ 1*PiIo2aasyB15nf1zbMWO9w.gif\n│  │  │  ├─ 1*RHb6p3zEYN6GIVtXhQvtUg.gif\n│  │  │  ├─ 1*TXuDJEdkIjdJll5Xs2wZ2w.png\n│  │  │  ├─ 1*TZbmWNgQkEmsZmol6fSdnw.gif\n│  │  │  ├─ 1*VrezmQ_2bsHHCUSFxNm2kQ.png\n│  │  │  ├─ 1*iES9yQoVnwQGxsKoHhE2uQ.gif\n│  │  │  ├─ 1*i_uezLMOZqgIPNsnrzKkmQ.png\n│  │  │  ├─ 1*ieNyG9uhzw66lGXrjyxNKQ.gif\n│  │  │  ├─ 1*inR_OfCObjnbxZIX-srkaA.png\n│  │  │  ├─ 1*k770qOtVklQZxhr0j7aCew.gif\n│  │  │  ├─ 1*qFXBBoqP39Bv_aTtmSmOUw.png\n│  │  │  ├─ 1*rf5sUpiqjZXPuJFW_-TiXQ.gif\n│  │  │  ├─ 1*uA-p4IlvU3hOKYDsQFy8qg.gif\n│  │  │  ├─ 1*vOsem0TohjoiQyRwj__IYA.gif\n│  │  │  ├─ 1*zzg2M4dVZZYvVsgFEPC_Yg.png\n│  │  │  └─ 702b_hqdefault.jpg\n│  │  ├─ 2021-08-14-tiling-window-management-平鋪式視窗管理-amethyst-yabai.md\n│  │  ├─ 2022-06-16-tech-skhd-失去功能-not-working-的解決方法\n│  │  │  ├─ 0*A5q6r3JS-zTQfZVk.jpg\n│  │  │  ├─ 0*nlUF009uzQ11n5d5.png\n│  │  │  ├─ 1*-O6oGPKvPXPJx055gUTnJA.png\n│  │  │  ├─ 1*FvKx68zuda255u3UiZds-w.png\n│  │  │  ├─ 1*ZhFCMO8tv_w42ZIjh8diHw.png\n│  │  │  └─ 1*dW3dMJS7WrqAj9NFzosk4Q.png\n│  │  ├─ 2022-06-16-tech-skhd-失去功能-not-working-的解決方法.md\n│  │  ├─ 使用 gmail 無限申辦帳號\n│  │  │  └─ image-20230108111759969.png\n│  │  └─ 使用 gmail 無限申辦帳號.md\n│  ├─ PHP\n│  │  ├─ 2018-10-27-laravel-使用-middleware-解決-access-control-allow-origin-的問題\n│  │  │  ├─ 1*_bSBChnoy9r7UHADRkrzsg.jpeg\n│  │  │  └─ image-20221227163758253.png\n│  │  ├─ 2018-10-27-laravel-使用-middleware-解決-access-control-allow-origin-的問題.md\n│  │  ├─ 2019-03-19-wsl-與-windows-的完美雙結合-windows-10-下使用-vscode-調用-wsl-對-php-專案-debug\n│  │  │  ├─ 0*4pzA--pou2v3UltC.png\n│  │  │  ├─ 1*GDziL_BBgZVPVRRg11kJNA.png\n│  │  │  ├─ 1*MZ3peuLJsPmNbINh2it23w.png\n│  │  │  ├─ 1*OhsuabAkpnoIeBOiNt4kew.png\n│  │  │  ├─ 1*VW_857h5A2v7f_4NvAwPiQ.png\n│  │  │  ├─ 1*XYYnww4odUDmAksV4h4F9g.png\n│  │  │  ├─ 1*YgarJ7jJIMRwsko3k8RpjQ.png\n│  │  │  ├─ 1*d1UGW93GfKv_5nsPwBjbgA.png\n│  │  │  ├─ 1*dcDgUdFoR3Ej9wPaYpeMdw.png\n│  │  │  ├─ 1*gIPR5dxAgTmkx2cUMmDNgw.png\n│  │  │  ├─ 1*nGb_3pubzkSNLpV796o07Q.png\n│  │  │  ├─ 1*rgp2ZAabc5CLr3A5n5ZFoA.png\n│  │  │  ├─ 1*ufKsrMYlszF5DhdbkII5kA.png\n│  │  │  ├─ 1*w0FzABVijj8cvxZKFSRRcQ.png\n│  │  │  ├─ 1*wjtSAfbgD_lTIaxoLco25A.png\n│  │  │  └─ 1*wywPZ4JbDVPIh2SMI4go1g.jpeg\n│  │  ├─ 2019-03-19-wsl-與-windows-的完美雙結合-windows-10-下使用-vscode-調用-wsl-對-php-專案-debug.md\n│  │  ├─ 2019-08-30-laravel-docker-輕鬆上手\n│  │  │  ├─ 1*4yRYoTkSKksHgcmuK3yYng.png\n│  │  │  ├─ 1*94J9E4eYD8h3We44b-ZWjg.png\n│  │  │  ├─ 1*BwGaFoUkllhXjCRDMS4Xng.png\n│  │  │  ├─ 1*M1gDrUe-uKcF1KQ3r9sVLA.png\n│  │  │  ├─ 1*Pv5gP1lwf4KlQL_IUBeI_Q.png\n│  │  │  ├─ 1*iHhs8cxEwQAzFLScQ8wfCw.png\n│  │  │  ├─ 1*qddAOC4j8pHKlqOIZjyTEQ.png\n│  │  │  └─ 1*wDUHaXNQ0yuWN_et9wiNAQ.png\n│  │  ├─ 2019-08-30-laravel-docker-輕鬆上手.md\n│  │  ├─ 2019-08-30-設定-vscode-xdebug-laradock\n│  │  │  ├─ 1*drM3rukuVUUmmvk2gbEqLg.png\n│  │  │  └─ 1*vKDcfdI_pOPOGEa7EIvfaw.png\n│  │  └─ 2019-08-30-設定-vscode-xdebug-laradock.md\n│  ├─ Tools\n│  │  ├─ 2018-11-14-vim-使用-vimdiff-來比較-git-diff-的差異\n│  │  │  └─ 1*EeuoQHRFpAlSgWO13ygBtQ.png\n│  │  ├─ 2018-11-14-vim-使用-vimdiff-來比較-git-diff-的差異.md\n│  │  ├─ 2018-11-22-vscode-使用-settings-sync-同步-vscode-的擴充功能與各項設定\n│  │  │  ├─ 1*0vub66zAiGY-lt80ullWRQ.gif\n│  │  │  ├─ 1*CPaXiDCJQOIWVktUa1qx-g.png\n│  │  │  ├─ 1*KKXvcZtFUTXKKGkI5wRLsA.png\n│  │  │  ├─ 1*UFh_o-j1QOVt4Wo3Tz61YQ.png\n│  │  │  ├─ 1*YgG3QMgFHwk_ghx-1Yn0xQ.png\n│  │  │  ├─ 1*daPnpILkbOhrmN55uqZKDg.png\n│  │  │  ├─ 1*p4105m0rt_6MF6189FBeuA.png\n│  │  │  ├─ 1*rfsi5shVkzx_9ZddZDj5zw.png\n│  │  │  ├─ 1*tW5d2qpMX0D3Mao0NpAbRg.png\n│  │  │  └─ 1*zhvAGV8O5uUBK8eMLTFjRQ.png\n│  │  ├─ 2018-11-22-vscode-使用-settings-sync-同步-vscode-的擴充功能與各項設定.md\n│  │  ├─ 2019-01-04-工具-tee-同時輸出訊息於terminal-與指定檔案.md\n│  │  ├─ 2019-04-10-wsl-與-windows-的完美雙結合-修改vscode的預設terminal為wsl\n│  │  │  ├─ 1*VKVjMQPwL_zX_HJV0MELzg.png\n│  │  │  ├─ 1*rqookuF2F7FDXCeApOn9PQ.png\n│  │  │  ├─ 1*sqT-Gr3efL4VQBVwStw26w.png\n│  │  │  └─ 1*z38TJl8tqLQUZfdtd2ZeDg.png\n│  │  ├─ 2019-04-10-wsl-與-windows-的完美雙結合-修改vscode的預設terminal為wsl.md\n│  │  ├─ 2019-04-26-wsl-與-windows-的完美雙結合-在wsl-中安裝-docker\n│  │  │  ├─ 1*0wMLVqb3BIbmSSkam8BdRw.png\n│  │  │  ├─ 1*9hGvYE5jegHm1r_97gH-jQ.png\n│  │  │  ├─ 1*PHx1BfZEXZY-Lr1pQ7gMzg.png\n│  │  │  ├─ 1*PzJ9x0KD4r-4_HpCQ5S-qQ.png\n│  │  │  ├─ 1*QMAbugL3OLtSOaHo1mwqBQ.png\n│  │  │  ├─ 1*dGHtkVH30G3r0sUEUxlhrg.png\n│  │  │  ├─ 1*fnUrY_wFYGXSyuPh5wFMxw.png\n│  │  │  ├─ 1*jipjYk-dYDwXafjfeB3Vmw.png\n│  │  │  ├─ 1*nDub8V2UV9tlGkVt3CKrGg.png\n│  │  │  └─ 1*uJZa8eMdaQzsddOzk4SvFA.png\n│  │  ├─ 2019-04-26-wsl-與-windows-的完美雙結合-在wsl-中安裝-docker.md\n│  │  ├─ 2019-05-04-docker-學習筆記-一-docker-簡介\n│  │  │  ├─ 0*fE653ysl-E57noD0.jpg\n│  │  │  └─ 1*8gaauCIDfhu0YrgB6vzm7A.jpeg\n│  │  ├─ 2019-05-04-docker-學習筆記-一-docker-簡介.md\n│  │  ├─ 2019-05-04-docker-學習筆記-安裝-docker\n│  │  │  ├─ 1*8gaauCIDfhu0YrgB6vzm7A.jpeg\n│  │  │  ├─ 1*pEq1TDSK37Cmtm4P4YCKlw.png\n│  │  │  └─ 1*uzxKuRqS7Xup9527Fa6s1A.png\n│  │  ├─ 2019-05-04-docker-學習筆記-安裝-docker.md\n│  │  ├─ 2019-05-08-docker-學習筆記-docker指令使用講解\n│  │  │  ├─ 1*-D5GNKFOo62Lykewkl-zDg.png\n│  │  │  ├─ 1*3ctkn8uYYtiJuO32zYUI0g.png\n│  │  │  ├─ 1*4j8QQehEcl_z0qSKlGtOJw.png\n│  │  │  ├─ 1*8r2-Uug3ULlJQddpDntItA.png\n│  │  │  ├─ 1*9NgQ4GHdp3SSV1JpgKbAYg.png\n│  │  │  ├─ 1*BQNHzvcrcJlcWQtZNzdNJg.png\n│  │  │  ├─ 1*EhTQOY8I653CHs7JcYxsHw.png\n│  │  │  ├─ 1*LI0SFrXy2WLKuw2Jy5TTeg.png\n│  │  │  ├─ 1*LdRLFtiPR3TFNLrNOgu2Rw.png\n│  │  │  ├─ 1*PHfGaiM7WKFPfScuzBKIQg.png\n│  │  │  ├─ 1*W2oKI1SoP8eveG5NkPZCJA.png\n│  │  │  ├─ 1*_1zg71rmFJzc8LKzmgFQwA.png\n│  │  │  ├─ 1*mI5nQn5PijUJ3-VJ_K4W8A.png\n│  │  │  ├─ 1*sfRRcLYpe-YAc89RJkppzg.png\n│  │  │  ├─ 1*tWO6Oyd4Oun82KgpIsjF3g.png\n│  │  │  ├─ 1*v4cbiPyzQLvADJnqaFNPoA.png\n│  │  │  └─ 1*wisYVqS_pLtGM796CCj_yQ.jpeg\n│  │  ├─ 2019-05-08-docker-學習筆記-docker指令使用講解.md\n│  │  ├─ 2019-05-10-docker-學習筆記-四-如何撰寫dockerfile\n│  │  │  ├─ 1*Fi3l7XGMOm_MxcWFVFsiHQ.png\n│  │  │  ├─ 1*W6o9HMTSTkrglwZ2Lr9s6g.png\n│  │  │  ├─ 1*nMp8zL7zFOYYpOCYAKFfSg.png\n│  │  │  ├─ 1*oK8aBUElGbB-Eq2fVz2wZw.png\n│  │  │  ├─ 1*pN38vgdyQVMY7p6qqiijlQ.png\n│  │  │  ├─ 1*roTHx2rfjh72h8kjVYHgWw.png\n│  │  │  └─ 1*tFmTqvE22YHplPhaaaYSBw.png\n│  │  ├─ 2019-05-10-docker-學習筆記-四-如何撰寫dockerfile.md\n│  │  ├─ 2019-05-22-docker-學習筆記-五-以一個todolist實戰-dockerfile\n│  │  │  ├─ 1*6Q2SP_K4g5Q2hSDLAFVT5A.png\n│  │  │  ├─ 1*E-fj9f15LNMb2J6oTNKHmQ.png\n│  │  │  ├─ 1*Hce3LKLB_yGCQBMjk4aVxg.gif\n│  │  │  ├─ 1*N9sP5pFlT6EvVtTFjyDyaQ.png\n│  │  │  ├─ 1*X0h-DQnHVIZtr0VPEVJ3Hw.png\n│  │  │  └─ 1*i5G6YjGcn6Ih2KlCcSpu7w.gif\n│  │  └─ 2019-05-22-docker-學習筆記-五-以一個todolist實戰-dockerfile.md\n│  └─ git\n│     ├─ 2018-10-27-git-修改默認對文件名不區分大小寫的設定\n│     │  └─ 1*A5zK5mklkvqFAA04vtskcg.png\n│     ├─ 2018-10-27-git-修改默認對文件名不區分大小寫的設定.md\n│     ├─ 2019-04-17-git-關於-git-的-m-的二三事\n│     │  └─ 1*LogYJXla7Qf4UOBXjNyRrA.png\n│     ├─ 2019-04-17-git-關於-git-的-m-的二三事.md\n│     ├─ 2020-04-07-git-用-rebase-合併分支-讓你的-git-history-更乾淨\n│     │  ├─ 1*0CbprtxSD9bGeD2XnVRiHA.png\n│     │  ├─ 1*C8hxxOpdGqxZ-zUqtkg3kA.png\n│     │  ├─ 1*ECOhYfjW8ztCI0inzMvQUA.png\n│     │  ├─ 1*Hk5KCcC-WzNVku731K7VWw.png\n│     │  ├─ 1*L1UKhRZTNXtt2AHLCsrlQA.png\n│     │  ├─ 1*MQ-xv-FbIWXJahsLDea-0g.png\n│     │  ├─ 1*Mc0f6hpwvlGrRZihEn4lpg.png\n│     │  ├─ 1*RNG46OBHZbikRif_JWuCWA.png\n│     │  ├─ 1*SDbO0L3bXRnjqdNVFJAdLQ.png\n│     │  ├─ 1*TZIQciWYAHN_Sdhm7fcFpg.png\n│     │  ├─ 1*UybAbYx6WrBrcC1S5vqZfQ.png\n│     │  ├─ 1*cVxaTmuY37VAmnsXbTwNrw.png\n│     │  ├─ 1*l_0AwXprRSt-RiA-WpjGqA.png\n│     │  ├─ 1*pjpYnYV6YCWQ6hu6eEeFUQ.png\n│     │  └─ 1*uVc-Sl91MlRsv3MClb42TA.png\n│     └─ 2020-04-07-git-用-rebase-合併分支-讓你的-git-history-更乾淨.md\n└─ _data\n   └─ images.yml\n\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession12/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession12/",
            "title": "Cambly-Lession12",
            "date_published": "2023-04-27T16:28:40.000Z",
            "content_html": "<p>extremely 極端的</p>\n<h3 id=\"very-bad\"><a class=\"anchor\" href=\"#very-bad\">#</a> very bad</h3>\n<p>awful -&gt;<br />\ndreadful -&gt; terrible.</p>\n<p>when I was at university, I failed my exam. It was my dreadful day.</p>\n<h3 id=\"very-good\"><a class=\"anchor\" href=\"#very-good\">#</a> very good.</h3>\n<p>terrific</p>\n<hr />\n<p>do not say  <code>absolutely good</code>  or  <code>absolutely bad</code></p>\n<p>qualified (v.) -&gt; 校驗是否合格 -&gt; to take part in<br />\nquality -&gt; 高品質 -&gt; made well</p>\n<p>exhausted - very tired<br />\nfilthy - very dirty<br />\nfurious - very angry<br />\npacked - very crowded</p>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession11/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession11/",
            "title": "Cambly-Lession11",
            "date_published": "2023-04-05T16:28:40.000Z",
            "content_html": "<ul>\n<li>Late-night snack 宵夜</li>\n<li>Cremated</li>\n<li>gather the ashes</li>\n<li>Urn</li>\n<li>Spread their ashes</li>\n<li>Techno Music</li>\n<li>once in a while -&gt; rarely.</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession10/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession10/",
            "title": "Cambly-Lession10",
            "date_published": "2023-02-06T16:28:40.000Z",
            "content_html": "<ul>\n<li>mental effort 腦力激盪</li>\n<li>hunch 彎腰駝背</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession9/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession9/",
            "title": "Cambly-Lession9",
            "date_published": "2023-02-05T16:28:40.000Z",
            "content_html": "<ul>\n<li>\n<p>to be reminded of (a promise) - I reminded my brother of he promise a gift for me.</p>\n</li>\n<li>\n<p>to dine in /out - 在餐廳內吃飯 (在店內用餐) ; to dine out 吃外面 (通常在家裡使用這句話)</p>\n<ul>\n<li>ex. Do you want to dine in or take out? 你要內用還是外帶</li>\n<li>ex. Let's done out. 我們去吃外面吧.</li>\n</ul>\n</li>\n<li>\n<p>to dig in - begin eating.<br />\nex. Let's dig in.</p>\n</li>\n<li>\n<p>cuisine - 美食</p>\n</li>\n<li>\n<p>ravenous - 嘴饞的</p>\n</li>\n<li>\n<p>midnight snack.</p>\n</li>\n<li>\n<p>nutritious - healthy food.</p>\n<ul>\n<li>nutritious 有營養的</li>\n</ul>\n</li>\n<li>\n<p>lean meat - 瘦肉</p>\n</li>\n<li>\n<p>ravenous = starving 飢餓</p>\n</li>\n<li>\n<p>artificial ingredients 人造的成分</p>\n</li>\n<li>\n<p>do sth. on the (daily)() basis</p>\n</li>\n<li>\n<p>flavorful - 有味道的</p>\n</li>\n<li>\n<p>fussy eater - 挑食的人</p>\n</li>\n<li>\n<p>it is healthier to eat at an earlier time</p>\n</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Frontend/axois-big5%E7%B6%B2%E9%A0%81%E7%8D%B2%E5%8F%96%E9%80%A0%E6%88%90%E4%BA%82%E7%A2%BC%E7%9A%84%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/",
            "url": "https://z20240.github.io/Tech/Frontend/axois-big5%E7%B6%B2%E9%A0%81%E7%8D%B2%E5%8F%96%E9%80%A0%E6%88%90%E4%BA%82%E7%A2%BC%E7%9A%84%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95/",
            "title": "[Axios] big5 網頁爬取時變成亂碼的解決方法",
            "date_published": "2023-02-03T08:17:31.334Z",
            "content_html": "<p>最近在使用爬取一個比較老的網站時發現，目標網站由於編碼方式是比較古早的編碼 - big5 ，因此在回傳的結果只要是中文的部分都變成了亂碼。</p>\n<p><img data-src=\"image-20230203152936673.png\" alt=\"image-20230203152936673.png\" /></p>\n<h3 id=\"解決方案\"><a class=\"anchor\" href=\"#解決方案\">#</a> 解決方案</h3>\n<p>npm 上有一個編碼轉換工具  <code>iconv</code>  可以很好地將不同格式的編碼進行轉碼。因此我們可以在 axios request api 的時候，將 responseType 設定為  <code>arraybuffer</code>  並且在  <code>transformResponse</code>  時讓 iconv 幫我們將 big5 轉換成現在主流的 utf-8。</p>\n<p>詳細的 code 可以見以下。</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> iconv <span class=\"token keyword\">from</span> <span class=\"token string\">'iconv-lite'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.ooo.xxx?q='</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> data <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token literal-property property\">responseType</span><span class=\"token operator\">:</span> <span class=\"token string\">'arraybuffer'</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token literal-property property\">transformResponse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> iconv<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'big5'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data:'</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 中文</span></pre></td></tr></table></figure>",
            "tags": [
                "Tech",
                "Frontend",
                "javascript",
                "axios",
                "iconv"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Flutter/Flutter%E5%AD%B8%E7%BF%92-flutter%E4%BB%8B%E7%B4%B9&Dart%E7%B0%A1%E4%BB%8B/",
            "url": "https://z20240.github.io/Tech/Flutter/Flutter%E5%AD%B8%E7%BF%92-flutter%E4%BB%8B%E7%B4%B9&Dart%E7%B0%A1%E4%BB%8B/",
            "title": "Flutter 學習 - flutter 簡介 & Dart 語法入門",
            "date_published": "2023-02-01T05:34:10.000Z",
            "content_html": "<h2 id=\"簡介\"><a class=\"anchor\" href=\"#簡介\">#</a> 簡介</h2>\n<p>Flutter 是 google 爸爸資助的一款原生跨平台框架。使用一種程式語言 dart 架構的 app 可同時提供 ios 與 android 運行。</p>\n<p>在 Flutter 中，所有的元件都是  <code>widget</code> 。整個視圖就是一個 root widget。</p>\n<h2 id=\"flutter-vs-react-native\"><a class=\"anchor\" href=\"#flutter-vs-react-native\">#</a> Flutter v.s. React Native.</h2>\n<p>網路上諸多人對於 flutter 與 react native 到底該選誰吵得不可開交。</p>\n<p>我在網路上找尋了許多大大小小的不同評論，以下節錄一些我同意的觀點。</p>\n<p><strong>先上結論</strong></p>\n<blockquote>\n<p><em>如果你已經會 React 且只有前端開發經驗，但缺乏 client side 開發經驗。也許 React Native 會更適合你。</em> - 節錄《知乎 - # 2022 年了，现在学习选择 Flutter 还是 ReactNative ?》</p>\n</blockquote>\n<p>這邊就僅記錄一些我所查詢的資料，有興趣的可以再轉去細究。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzUyNjc2MDk3OA==\">2022 年了，现在学习选择 Flutter 还是 ReactNative ?</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaW5mb3EuY24vYXJ0aWNsZS84elNsUUc5SXlTNVd5cmVaZ1JYUj9mYmNsaWQ9SXdBUjNUWE4ycGFfRVlOcUtfR1o3TUhpUGdwdVd3UWlXRmlWUTR0N2llUmhBVWcxN3VLUGxYdVJZV18wVQ==\">2021 年，Flutter 与 React Native 该如何选择？</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNDU0NjIyODU=\">选 Flutter 还是 React Native？跨平台开发框架推荐及优劣势比较</span></li>\n</ul>\n<p>本篇主要會是以記錄 Dart 語法為核心。</p>\n<h2 id=\"dart\"><a class=\"anchor\" href=\"#dart\">#</a> Dart</h2>\n<p>由於開發 Flutter 所使用的語言是 Dart, 因此我們有必要瞭解一下如何撰寫 Dart 語法的程式。</p>\n<p>Dart 也是 google 開發的程式語言，主要用於前端界面的描述。其屬於物件導向的語言，但是同時結合了 javascript, java, c#, python 等特性。因此如果我們有學過其中任何一種語言，想要上手這門程式語言應該不會是太困難的事情。</p>\n<p>首先 dart 擁有一個 online playground: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXJ0cGFkLmRldi8=\">DartPad</span> 我們可以在這上面嘗試我們不確定的語法。算是蠻平易近人的。</p>\n<h3 id=\"type-類型\"><a class=\"anchor\" href=\"#type-類型\">#</a> Type 類型</h3>\n<p>Dart 是個強型別的程式語言，我們需要在變數定義時就給與其型別。</p>\n<p>例如常見的 int, string, boolean...etc.</p>\n<p>以下使用 table 列舉我們可能會用到的幾種資料形態。</p>\n<table>\n<thead>\n<tr>\n<th>Data Type (資料型態)</th>\n<th>Keyword (關鍵字)</th>\n<th>Description (描述)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Number</td>\n<td>num, int, double</td>\n<td>數值型別，整數，浮點數</td>\n</tr>\n<tr>\n<td>Strings</td>\n<td>String</td>\n<td>字串</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>bool</td>\n<td>true/false</td>\n</tr>\n<tr>\n<td>Lists</td>\n<td>List</td>\n<td>Array</td>\n</tr>\n<tr>\n<td>Maps</td>\n<td>Map</td>\n<td>Key-Value pairs</td>\n</tr>\n<tr>\n<td>var</td>\n<td>自行推斷數值型別的宣告，一定要給予初始值。</td>\n<td>動態宣告。值的型別利用初始值自動推斷</td>\n</tr>\n<tr>\n<td>dynamic</td>\n<td>動態宣告變數，可以接受變數在執行階段改變型別。</td>\n<td>動態宣告。值的型別可以動態改變</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"一般數值宣告\"><a class=\"anchor\" href=\"#一般數值宣告\">#</a> 一般數值宣告</h5>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"John Smith\"</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>int age <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Number</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bool isMale <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Boolean</span></pre></td></tr></table></figure><p>使用  <code>var</code>  宣告</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"John Smith\"</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// String</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> age <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Number</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> isMale <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Boolean</span></pre></td></tr></table></figure><h6 id=\"字串串接\"><a class=\"anchor\" href=\"#字串串接\">#</a> 字串串接</h6>\n<p>dart 的字串串接可以使用  <code>+</code>  或是使用「空格」即可。當然，其也有所謂的版模字串，使用  <code>$&#123;&#125;</code>  直接將變數插入字串之中。</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"John \"</span></span> <span class=\"token operator\">+</span> <span class=\"token string-literal\"><span class=\"token string\">\"Smith\"</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// John Smith</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> desc <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"He \"</span></span> <span class=\"token string-literal\"><span class=\"token string\">\"is \"</span></span> <span class=\"token string-literal\"><span class=\"token string\">\"a \"</span></span> <span class=\"token string-literal\"><span class=\"token string\">\"kind \"</span></span> <span class=\"token string-literal\"><span class=\"token string\">\"person.\"</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// He is a kind person.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> text <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"lorem </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">name</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> dolor sit </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">desc</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// lorem John Smith dolor sit He is a kind person.</span></pre></td></tr></table></figure><h3 id=\"list\"><a class=\"anchor\" href=\"#list\">#</a> List</h3>\n<p>Dart 允許 list 中的 element 型別不同。</p>\n<p>與 js 不同的地方是 Dart 的 List 不可以使用 string 作為 index, 也不可以直接 assign 超過 List 長度的 index 給變數.</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string-literal\"><span class=\"token string\">\"123\"</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token string-literal\"><span class=\"token string\">'chara'</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token number\">345</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string-literal\"><span class=\"token string\">'''</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  multi line string 1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  multi line string 2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  multi line string 3</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  '''</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">// 註解</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>list<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"test\"</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uncaught Error: RangeError (index): Index out of range: index should be less than 5: 10</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// 巡行</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">ele</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// (不同於 Maps, list 的 forEach 僅能 literal element 無法獲得 index.)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">// 如果需要獲得 index, 我們可以使用 `asMap` 先轉換成 Map 再進行 literal.</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">asMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">ele</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// add element.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">// 或是使用 spread operator.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">var</span> value <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">,</span> element<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">// remove by condition</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">removeWhere</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> item<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">\"id\"</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">// remove by index.</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">removeIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">// filter</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>list<span class=\"token punctuation\">.</span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> ele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"maps\"><a class=\"anchor\" href=\"#maps\">#</a> Maps</h3>\n<p>Dart 的 Maps 有三種</p>\n<ul>\n<li>HashMap\n<ul>\n<li>是無序的 Ｍap，存放在 HashMap 內的元素，在迭代取出時，不會依照順序取出。</li>\n</ul>\n</li>\n<li>LinkedHashMap\n<ul>\n<li><strong>預設 Map 的實作。</strong> 將元素存進 LinkedHashMap，LinkedHashMap 會自動將前後的元素串起來，所以在迭代的時候就可以按照原先加入的順序取出。</li>\n</ul>\n</li>\n<li>SplayTreeMap\n<ul>\n<li>存放在 SplayTreeMap 的元素，可以按照字母順序排列。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 定義空 Map</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">var</span> emptyMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//_InternalLinkedHashMap&lt;dynamic, dynamic></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">var</span> emptyMap <span class=\"token operator\">=</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//_InternalLinkedHashMap&lt;String, String></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 用 LinkedHashMap 儲存 Map 的元素，會依照順序頭尾串接起來，是有序的 Map。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">var</span> keyValuePair <span class=\"token operator\">=</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// Map</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token string-literal\"><span class=\"token string\">'Taiwan'</span></span><span class=\"token punctuation\">:</span><span class=\"token string-literal\"><span class=\"token string\">'Taipei'</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token string-literal\"><span class=\"token string\">'Japan'</span></span><span class=\"token punctuation\">:</span><span class=\"token string-literal\"><span class=\"token string\">'Tokyo'</span></span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token string-literal\"><span class=\"token string\">'USA'</span></span><span class=\"token punctuation\">:</span><span class=\"token string-literal\"><span class=\"token string\">'Washington'</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">// 使用</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>keyValuePair<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">\"Taiwan\"</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 新增資料</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>keyValuePair<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">\"Tokyo\"</span></span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"Hot\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>keyValuePair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// 刪除資料</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>keyValuePair<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'USA'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>keyValuePair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &#123;Taiwan: Taipei, Japan: Tokyo, Tokyo: Hot&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">// 檢查是否有 key</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>keyValuePair<span class=\"token punctuation\">.</span><span class=\"token function\">containsKey</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Taiwan\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// 檢查是否有 value</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>keyValuePair<span class=\"token punctuation\">.</span><span class=\"token function\">containsValue</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Tokyo\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">// 巡行</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>keyValuePair<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">key</span></span><span class=\"token string\">'s capital is </span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">value</span></span><span class=\"token string\">.\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"修飾字-const-final-dynamic\"><a class=\"anchor\" href=\"#修飾字-const-final-dynamic\">#</a> 修飾字 const, final, dynamic</h3>\n<h5 id=\"const-final\"><a class=\"anchor\" href=\"#const-final\">#</a> const &amp; final</h5>\n<p>const 與 final 都是用來宣告「常數」的關鍵字。</p>\n<p>不同的地方在於 const 在 compile time 就要決定好 value, final 則是在 run time 才決定 value.</p>\n<p>以下給一個 example 就會很容易明白了</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1243</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 在 compile time a 就已經被賦值了</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">const</span> time <span class=\"token operator\">=</span> <span class=\"token class-name\">DateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//compile error. 因為在 compile time 無法獲得 now 的數值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">final</span> time <span class=\"token operator\">=</span> <span class=\"token class-name\">DateTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果需要在 run time 才賦值的話，就要使用 final</span></pre></td></tr></table></figure><h5 id=\"dynamic\"><a class=\"anchor\" href=\"#dynamic\">#</a> dynamic</h5>\n<p>dynamic 可以想成 javascript 的  <code>var</code> 。是一個動態變數。</p>\n<p>意思是，使用這個關鍵字宣告的變數可以不管型別、任意賦值。</p>\n<p>以下為一個例子</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">dynamic</span> variable <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">\"string\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// string</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>variable <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>variable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span></pre></td></tr></table></figure><h3 id=\"function\"><a class=\"anchor\" href=\"#function\">#</a> function</h3>\n<p>function 的命名需要先定義型別。</p>\n<p>參數可以使用  <code>=</code>  給予 default value 但是需要使用  <code>&#123;&#125;</code>  包起來。呼叫的時候則是使用  <code>:</code>  來指定值</p>\n<p>example.</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">String</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token string-literal\"><span class=\"token string\">\"abc\"</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 也可以對 arguments 定義型別</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token class-name\">String</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>int a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> b<span class=\"token operator\">=</span><span class=\"token string-literal\"><span class=\"token string\">\"abc\"</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">func</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token number\">345</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"hello world\"</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \"345, hello world\"</span></pre></td></tr></table></figure><p>當 function statement 只有一行的時候，可以用 lambda function 的形式撰寫。</p>\n<p>lambda function 的撰寫風格很像 javascript 的 arrow function.</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//lambda 的方式宣告 function.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">String</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>int a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> b<span class=\"token operator\">=</span><span class=\"token string-literal\"><span class=\"token string\">\"abc\"</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h5 id=\"anonymous-function\"><a class=\"anchor\" href=\"#anonymous-function\">#</a> anonymous function</h5>\n<p>dart 中的 function 也可以像 javascript 一樣在參數中傳遞。</p>\n<p>我們可以使用  <code>Function</code>  這個型別來承接匿名函式。</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">var</span> func1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">=</span><span class=\"token string-literal\"><span class=\"token string\">\"abc\"</span></span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">a</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token punctuation\">$&#123;</span><span class=\"token expression\">b</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> = 123\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">func1</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token number\">7893</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"test code\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// Output：</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">// 7893, test code</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 7893, test code = 123</span></pre></td></tr></table></figure><h4 id=\"class\"><a class=\"anchor\" href=\"#class\">#</a> class</h4>\n<p>Dart 中的 class 宣告方式比較接近 Java 使用與 class name 相同的名稱作為 constructor.</p>\n<p>並且，Dart 並不支持 anonymous class.</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Video</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 標題</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 影片資訊</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">String</span> publishTime<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 上傳時間</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">String</span> thumbnail<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 縮圖網址</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 影片網址</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token class-name\">Video</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> description<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> publishTime<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> thumbnail<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>description <span class=\"token operator\">=</span> description<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publishTime <span class=\"token operator\">=</span> publishTime<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>thumbnail <span class=\"token operator\">=</span> thumbnail<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>另外 Dart 不支持 constructor 多型，若是我們需要依照不同情況給予不同參數的實例化，我們可以如下這樣寫。</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">Video</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token class-name\">String</span> _title<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 標題</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token class-name\">String</span> _description<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 影片資訊</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token class-name\">String</span> _publishTime<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 上傳時間</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token class-name\">String</span> _thumbnail<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 縮圖網址</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token class-name\">String</span> _url<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 影片網址</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">// 使用 縮寫，直接取代原本 assign 的寫法</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token class-name\">Video</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_title<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_description<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_publishTime<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_thumbnail<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token class-name\">Video</span><span class=\"token punctuation\">.</span><span class=\"token function\">onlyUrl</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token class-name\">Video</span><span class=\"token punctuation\">.</span><span class=\"token function\">onlyTitle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token comment\">//getter</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token class-name\">String</span> <span class=\"token keyword\">get</span> title <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token class-name\">String</span> <span class=\"token keyword\">get</span> url <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token comment\">//setter</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>  <span class=\"token keyword\">set</span> <span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">var</span> video1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Video</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'Dart Tutorial'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'Happy coding'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'2019/9/14'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'https://123'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'https://456'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>video1<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Output： Dart Tutorial</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">var</span> video2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Video</span><span class=\"token punctuation\">.</span><span class=\"token function\">onlyUrl</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"https://123.456\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>video2<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Output： https://123.456</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">var</span> video3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Video</span><span class=\"token punctuation\">.</span><span class=\"token function\">onlyTitle</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Only title\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>video3<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Output： Only title</span></pre></td></tr></table></figure><h3 id=\"非同步語法\"><a class=\"anchor\" href=\"#非同步語法\">#</a> 非同步語法</h3>\n<h4 id=\"async-await-future\"><a class=\"anchor\" href=\"#async-await-future\">#</a> async, await, Future</h4>\n<ul>\n<li><code>Future</code>  是一個 class 用來表示非同步的結果，擁有兩個狀態: completed /uncompleted。可以類比為 javascript 的 promise.</li>\n<li><code>async</code>  是用於區分 function 是否為非同步，使用方式就如 javascript 一樣，在 function 前面加上關鍵字。</li>\n<li><code>await</code>  只能在 async function 中使用，用來等待非同步的工作完成。概念與 javascript 的 await 一樣。</li>\n</ul>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 載入 dart async 的 package.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string-literal\"><span class=\"token string\">'dart:async'</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">introduction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// Future.delayed 類似 js 的 Promise.delay. 模擬非同步情形。等待兩秒。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Future</span><span class=\"token punctuation\">.</span><span class=\"token function\">delayed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Duration</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Dart tutorial\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Before introduction\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">introduction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"After introduction\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// Output:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// Before introduction</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// After introduction</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// Dart tutorial</span></pre></td></tr></table></figure><p>使用  <code>await</code>  的效果</p>\n<figure class=\"highlight dart\"><figcaption data-lang=\"dart\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 載入 dart async 的 package.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string-literal\"><span class=\"token string\">'dart:async'</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token class-name\">Future</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">introduction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token comment\">// Future.delayed 類似 js 的 Promise.delay. 模擬非同步情形。等待兩秒。</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Future</span><span class=\"token punctuation\">.</span><span class=\"token function\">delayed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Duration</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token string-literal\"><span class=\"token string\">\"Dart tutorial\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Before introduction\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> <span class=\"token function\">introduction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"After introduction\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">// Output:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// Before introduction</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">// Dart tutorial</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">// After introduction</span></pre></td></tr></table></figure>",
            "tags": [
                "Tech",
                "Flutter",
                "flutter"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Flutter/Flutter%E5%AD%B8%E7%BF%92-%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E8%88%87%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/",
            "url": "https://z20240.github.io/Tech/Flutter/Flutter%E5%AD%B8%E7%BF%92-%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D%E8%88%87%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86/",
            "title": "Flutter 學習 - 環境安裝與錯誤處理",
            "date_published": "2023-01-31T05:34:10.000Z",
            "content_html": "<p>在開始 flutter 的專案之前，首要步驟就是先將環境架好。<br />\n由於 flutter 需要跨平台開發，因此我們不僅需要安裝 android sdk, 也需要安裝 ios 相關的 xcode。<br />\n這篇主要記錄我在架設 flutter 環境時碰到的錯誤與處理方式。</p>\n<h2 id=\"建構-flutter-開發環境\"><a class=\"anchor\" href=\"#建構-flutter-開發環境\">#</a> 建構 flutter 開發環境</h2>\n<p>先列一下我裝置的規格</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>- MacOS Ventura 13.1 Apple M1 chip.</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>- Memory 16GB</pre></td></tr></table></figure><h3 id=\"安裝-flutter\"><a class=\"anchor\" href=\"#安裝-flutter\">#</a> 安裝 flutter</h3>\n<p>首先，先到 flutter 官網依照 flutter 安裝教學進行安裝。<br />\n由於我這邊是 macOS 因此 flutter 安裝的部分會依照 macOS 的部分進行安裝。</p>\n<h4 id=\"獲得-sdk\"><a class=\"anchor\" href=\"#獲得-sdk\">#</a> 獲得 sdk</h4>\n<p>下載 flutter sdk 並且解壓縮到自己喜歡的目錄。<br />\n我在  <code>~/Document</code>  中建立了一個  <code>Project</code>  目錄專門放置專案相關的資源。<br />\n因此 flutter 會放置在  <code>~/Document/Project</code>  中。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> ~/Document/Project</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">unzip</span> ~/Downloads/flutter_macos_3.7.0-stable.zip flutter</pre></td></tr></table></figure><p>加入 env.</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PATH</span>:<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token builtin class-name\">pwd</span><span class=\"token variable\">`</span></span>/flutter/bin\"</span></pre></td></tr></table></figure><h4 id=\"執行-flutter-doctor\"><a class=\"anchor\" href=\"#執行-flutter-doctor\">#</a> 執行 flutter doctor</h4>\n<p>flutter doctor 會診斷是否缺少開發 flutter 時所需要的相關套件。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>flutter doctor</pre></td></tr></table></figure><p>第一次跑的時候我還未裝 andriod sdk 與 xcode 。因此得到的結果會是類似以下這樣。</p>\n<p><img data-src=\"image-20230201035252043.png\" alt=\"\" /></p>\n<p>接下來，我們就要一步一步地把錯誤的部分給修正。</p>\n<h3 id=\"安裝-android-sdk\"><a class=\"anchor\" href=\"#安裝-android-sdk\">#</a> 安裝 Android sdk.</h3>\n<p>首先到 android studio 官網安裝 android studio。<br />\n下載並安裝完成後，開啟 android studio，並且點選  <code>settings &gt; Appearance &amp; behavior &gt; System Settings &gt; Andriod SDK</code>   並且選擇到 sdk tools，將裡面的 sdk 都安裝起來。</p>\n<p><img data-src=\"image-20230201034918514.png\" alt=\"\" /></p>\n<p>安裝完後在 env 中增加 path</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PATH</span>:<span class=\"token environment constant\">$HOME</span>/Library/Android/sdk\"</span></pre></td></tr></table></figure><p>再重跑一次  <code>flutter doctor</code></p>\n<p><img data-src=\"image-20230201035715344.png\" alt=\"\" /></p>\n<p>這次 error message 變了，有些 licensee 不正確。 因此我們照著執行  <code>flutter doctor --android-licenses</code></p>\n<p>接下來它會問你一些 licenses 是否同意。 就照著選  <code>Y</code>  就好。</p>\n<p>結束後，再跑一次  <code>flutter doctor</code>  理論上 android 這邊的 error 就都清除了。</p>\n<p><img data-src=\"image-20230201040009795.png\" alt=\"\" /></p>\n<h3 id=\"安裝-xcode\"><a class=\"anchor\" href=\"#安裝-xcode\">#</a> 安裝 xcode.</h3>\n<p>直接上 app store 安裝 xcode.</p>\n<p><img data-src=\"image-20230201040236174.png\" alt=\"\" /></p>\n<p>安裝完成後執行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> xcode-select <span class=\"token parameter variable\">--switch</span> /Applications/Xcode.app/Contents/Developer</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> xcodebuild <span class=\"token parameter variable\">-runFirstLaunch</span></pre></td></tr></table></figure><p>再執行  <code>flutter doctor</code>  也許會碰到跟我一樣的狀況。 敘述缺少  <code>cocoaPods</code>  。</p>\n<p><img data-src=\"image-20230201040518776.png\" alt=\"\" /></p>\n<p>因此我們要再安裝  <code>cocoaPods</code> 。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> gem <span class=\"token function\">install</span> cocoapods</pre></td></tr></table></figure><p>之後再跑一遍，理論上 xcode 的部分就也修掉了。</p>\n<p><img data-src=\"image-20230201040716354.png\" alt=\"\" /></p>\n<p>最後就剩下 Java 的 bundled 要處理。</p>\n<h3 id=\"安裝-java-bundle\"><a class=\"anchor\" href=\"#安裝-java-bundle\">#</a> 安裝 Java bundle.</h3>\n<p>我首先找尋 stackoverflow 上的解決方法，查到這篇 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNjg1Njk0MzAvdW5hYmxlLXRvLWZpbmQtYnVuZGxlZC1qYXZhLXZlcnNpb24td2l0aC1mbHV0dGVyLWRvY3Rvci1hZnRlci11cGRhdGluZy1hbmRyb2lk\">Unable to find bundled Java version with flutter doctor, after updating Android studio Arctic Fox(2020.3.1) on M1 Apple Silicon</span></p>\n<p>底下的留言串有點長，我這邊將內容整理成一套處理的方法。</p>\n<ul>\n<li>設置  <code>Java_Home</code>  環境變數<br />\n參考這篇文章 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ta3lvbmcuY29tL2phdmEvaG93LXRvLXNldC1qYXZhX2hvbWUtZW52aXJvbm1lbnQtdmFyaWFibGUtb24tbWFjLW9zLXgvI3doYXQtaXMtdXNybGliZXhlY2phdmEtaG9tZQ==\"># How to Set $JAVA_HOME environment variable on macOS</span></li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">JAVA_HOME</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>/usr/libexec/java_home<span class=\"token variable\">)</span></span></pre></td></tr></table></figure><ul>\n<li>接下來依照以下指令一步一步 alias</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /Applications/Android<span class=\"token punctuation\">\\</span> Studio.app/Contents/jre</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 如果發現 Contents 內沒有 jre 請執行這個步驟</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /Applications/Android<span class=\"token punctuation\">\\</span> Studio.app/Contents</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> jbr jre</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span> jre</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 建立 jre 的 symbolic link</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> <span class=\"token punctuation\">..</span>/jre jdk</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 建立 JavaAppletPlugin.plugin 的 symbolic link</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> <span class=\"token string\">\"/Library/Internet Plug-Ins/JavaAppletPlugin.plugin\"</span> jdk</pre></td></tr></table></figure><blockquote>\n<p><em>Hint: 這邊可能會碰到  <code>/Library/Internet Plug-Ins</code>  沒有  <code>JavaAppletPlugin</code>  的情況</em><br />\n<em>這時我們需要另外修正這部分</em></p>\n<p>follow 以下步驟</p>\n<ol>\n<li>到 Java 官網下載 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamF2YS5jb20vZW4vZG93bmxvYWQvaGVscC9tYWNfaW5zdGFsbC5odG1s\">java installation</span></li>\n<li>依照官網指示安裝.</li>\n<li>完成之後再一次確認  <code>ls /Library/Internet Plug-Ins/</code>  是否有  <code>JavaAppletPlugin.plugin</code>  。此時應該就會已經裝好了</li>\n</ol>\n</blockquote>\n<p>以上步驟完成之後我們再執行一次  <code>flutter doctor -v</code></p>\n<p><img data-src=\"image-20230201142130471.png\" alt=\"\" /></p>\n<p>到這邊，應該就能看到全部錯誤都修正完畢。</p>\n<p>如此 fultter 的環境就算準備完成了。</p>\n",
            "tags": [
                "Tech",
                "Flutter",
                "flutter"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession8/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession8/",
            "title": "Cambly-Lession8",
            "date_published": "2023-01-30T16:28:40.000Z",
            "content_html": "<ul>\n<li>comstom - traditions</li>\n<li>to get along - had a good relationship with sb. ex. we get along very well.</li>\n<li>once in a lifetime (adj.) - only one chance in lifetime.</li>\n<li>in common -</li>\n<li>to enjoy each other's company - the fact or condition of being with another or others, especially in a way that provides friendship and enjoyment.</li>\n<li>as often as -</li>\n<li>what's more - 更重要的是</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession7/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession7/",
            "title": "Cambly-Lession7",
            "date_published": "2023-01-24T16:28:40.000Z",
            "content_html": "<ul>\n<li>Got something different with your hair.</li>\n<li>You dye hair.</li>\n<li>you curl your hair.</li>\n<li>wavey 波浪捲 /curly 大卷髮</li>\n<li>fossil 化石</li>\n<li>rainbow moonstone</li>\n<li>Encyclopedia</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Aws%20Architecture/Aws-architecture-Serverless/",
            "url": "https://z20240.github.io/Tech/Aws%20Architecture/Aws-architecture-Serverless/",
            "title": "Aws 架構學習 - Serverless",
            "date_published": "2023-01-08T05:34:10.000Z",
            "content_html": "<h1 id=\"aws-架構學習-lambda\"><a class=\"anchor\" href=\"#aws-架構學習-lambda\">#</a> Aws 架構學習 - Lambda</h1>\n<p>Aws lambda 是一項 event-driven 的 serverless 服務。它鼓勵將 backend 的許多功能拆成一項項小的 function，並且部屬在 aws lambda 上。我們不再需要自己維護 server 是否正常運行、不需要另外租服務空間放置自己的 server application。Aws lambda 會在 event triggered 時自己去調用我們放上去的 lambda function，並且在結束時自動銷毀產生的 lambda 實體。</p>\n<p>有很多方法可以去 trigger aws lambda，例如</p>\n<ul>\n<li>API getway called</li>\n<li>S3 upload</li>\n<li>DynamoDB changes</li>\n<li>Cloudwatch events</li>\n<li>SNS notifications</li>\n<li>third party APIs ... etc</li>\n</ul>\n",
            "tags": [
                "Tech",
                "Aws Architecture",
                "aws",
                "iam"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Aws%20Architecture/Aws-architecture-IAM/",
            "url": "https://z20240.github.io/Tech/Aws%20Architecture/Aws-architecture-IAM/",
            "title": "Aws 架構學習 - IAM",
            "date_published": "2023-01-08T02:34:10.000Z",
            "content_html": "<h1 id=\"aws-架構學習-iam\"><a class=\"anchor\" href=\"#aws-架構學習-iam\">#</a> Aws 架構學習 - IAM</h1>\n<p>Aws 是現非常受歡迎的雲端架構。不論是 backend user 或是 devOpts ，僅需要在 aws 上作一些點選或是撰寫相應的 yaml 設定檔，即可快速地</p>\n<h3 id=\"申請-aws-帳號\"><a class=\"anchor\" href=\"#申請-aws-帳號\">#</a> 申請 Aws 帳號</h3>\n<p>Aws 帳號申請是免費的，我們只要登入 Aws 網站照著步驟填寫即可獲得一自己的 Aws 帳號。</p>\n<p><img data-src=\"image-20230108104318658.png\" alt=\"image-20230108104318658.png\" /></p>\n<p>比較要注意的一點是在帳號申請當下，我們必須綁定一張信用卡，因為 Aws 的許多服務是需要付費的。但是我們也不用太過擔心，因為大多數服務都有免費額度，我們只要在 practice 完之後有完整關閉服務，都不用擔心會有費用產生。</p>\n<p><img data-src=\"image-20230108105326254.png\" alt=\"image-20230108105326254.png\" /></p>\n<p><img data-src=\"image-20230108105919211.png\" alt=\"image-20230108105919211.png\" /></p>\n<p>如果不幸免費額度用完了，想要重新申辦帳號。僅需重新註冊即可。這邊有個「<a href=\"https://z20240.github.io/Tech/Others/%E4%BD%BF%E7%94%A8%20gmail%20%E7%84%A1%E9%99%90%E7%94%B3%E8%BE%A6%E5%B8%B3%E8%99%9F/\">使用 gmail 無限申辦帳號</a>」的方法，有興趣可以來這邊看看。</p>\n<h3 id=\"iam-設定\"><a class=\"anchor\" href=\"#iam-設定\">#</a> IAM 設定</h3>\n<p>IAM 是 aws 的帳號管理中心。所有有關 aws 的帳號管理相關業務都都需要來 iam 進行設定。</p>\n<h4 id=\"使用-root-account-新增一名使用者\"><a class=\"anchor\" href=\"#使用-root-account-新增一名使用者\">#</a> 使用 root account 新增一名使用者</h4>\n<p><img data-src=\"image-20230108113854062.png\" alt=\"image-20230108113854062.png\" /></p>\n<h4 id=\"新建一名使用者\"><a class=\"anchor\" href=\"#新建一名使用者\">#</a> 新建一名使用者</h4>\n<p>選取到 IAM 之後，點擊 sidebar 的  <code>Users</code>  &gt;  <code>Add users</code> <br />\n<img data-src=\"image-20230108114033352.png\" alt=\"image-20230108114033352.png\" /></p>\n<p>這邊帳號可以自己取，其中</p>\n<ul>\n<li>Access key - 用於我們程式開發時使用，因此需要勾選</li>\n<li>Password - 這邊是問你這個帳號是否需要使用 Web 的 Aws console dashboard. 如果這個帳號不需要 dashboard 操作，可以不創。(通常還是建立一下比較方便)</li>\n</ul>\n<h4 id=\"設置權限\"><a class=\"anchor\" href=\"#設置權限\">#</a> 設置權限</h4>\n<p><img data-src=\"image-20230108115828306.png\" alt=\"image-20230108115828306.png\" /></p>\n<p>這邊我們可以依照需求選擇要給予這個 user 的權限。若是要讓此 user 作為類似 admin 使用的話，我們可以直接選擇  <code>AdminstratorAccess</code></p>\n<p><img data-src=\"image-20230108120035484.png\" alt=\"image-20230108120035484.png\" /></p>\n<p>這邊是額外可選設定，Tag 可以做一些客製化標記，作為往後 filter 使用。</p>\n<p><img data-src=\"image-20230108120359228.png\" alt=\"image-20230108120359228.png\" /></p>\n<p>如果我們設定得差不多了，這邊 review 好就可以創建了。</p>\n<p><img data-src=\"image-20230108120532329.png\" alt=\"image-20230108120532329.png\" /></p>\n<p>接下來我們可以將這組  <code>access key ID</code>  與  <code>secret access key</code>  設定在我們的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmF3cy5hbWF6b24uY29tL3poX3R3L2NsaS9sYXRlc3QvdXNlcmd1aWRlL2NsaS1jb25maWd1cmUtZW52dmFycy5odG1s\">環境變數</span></p>\n<p>![[image-20230108122050789.png]]</p>\n<p>至此，基本的 IAM 設定就差不多完成了。</p>\n",
            "tags": [
                "Tech",
                "Aws Architecture",
                "aws",
                "iam"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Others/%E4%BD%BF%E7%94%A8%20gmail%20%E7%84%A1%E9%99%90%E7%94%B3%E8%BE%A6%E5%B8%B3%E8%99%9F/",
            "url": "https://z20240.github.io/Tech/Others/%E4%BD%BF%E7%94%A8%20gmail%20%E7%84%A1%E9%99%90%E7%94%B3%E8%BE%A6%E5%B8%B3%E8%99%9F/",
            "title": "如何使用 gmail 無限申辦帳號",
            "date_published": "2023-01-08T02:34:10.000Z",
            "content_html": "<p>很多線上服務都需要 email 進行帳號申辦。但是很多時候一個帳號僅能綁定一個信箱。而我們想要多的帳號，但是沒有這麼多信箱時該怎麼辦呢？</p>\n<p>Gmail 有一個特殊功能。如果你在自己的 gmail 信箱帳號後面使用  <code>+[number|letters]</code>  ，gmail 會認得，並且統一寄送到你真正的信箱。</p>\n<p>例如有一個帳號是 <span class=\"exturl\" data-url=\"bWFpbHRvOmFiY0BnbWFpbC5jb20=\">abc@gmail.com</span> 。若是我們在註冊信箱使用</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"bWFpbHRvOmFiYysxQGdtYWlsLmNvbQ==\">abc+1@gmail.com</span>, <span class=\"exturl\" data-url=\"bWFpbHRvOmFiYysyQGdtYWlsLmNvbQ==\">abc+2@gmail.com</span> 甚至是 <span class=\"exturl\" data-url=\"bWFpbHRvOmFiYythbnl0aGluZ0BnbWFpbC5jb20=\">abc+anything@gmail.com</span> ，其信件都會寄送到 <span class=\"exturl\" data-url=\"bWFpbHRvOmFiY0BnYW1pbC5jb20=\">abc@gamil.com</span> 這個信箱。而大部分網站針對這些信箱都會視為是不同的信箱位置。如此我們便可以使用同一個信箱註冊大量的帳號了。</li>\n</ul>\n<p>![[image-20230108111759969.png]]</p>\n<p>這是 Gmail 一個獨有的信箱服務。</p>\n<p>這也很好的幫助使用者能夠管理我們的信箱收發服務。</p>\n<p>例如我們就能夠使用  <code>+地區</code>  來作為分區的帳號管理，或是使用  <code>+部門</code>  來幫助自己達到業務範圍的分別管理。</p>\n",
            "tags": [
                "Tech",
                "Others",
                "gmail"
            ]
        },
        {
            "id": "https://z20240.github.io/Tech/Hexo/fix-mermaid-parser-issue/",
            "url": "https://z20240.github.io/Tech/Hexo/fix-mermaid-parser-issue/",
            "title": "解決 Mermaid 無法正確在 shoka 主題顯示的問題",
            "date_published": "2023-01-06T15:08:53.977Z",
            "content_html": "<p><code>Mermaid</code>  作為 markdown 的流程圖繪製解決方案大大增加了 markdown 的實用性。對於繪圖苦手的我來說 Mermaid 簡直是一大救星。因此在開始自己搭建 hexo 部落格之後，我第一件事也是確認 Mermaid 是否可用。</p>\n<p>後來選上 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYw==\">shoka</span> 這套主題不單是它漂亮的佈景，還有豐富的內建 markdwon 語法支援。其中當然包括了今天的主角  <code>Mermaid</code> 。</p>\n<p>在一切搭建都接近完成後，我依依確認功能是否完備時發現 Mermaid 無法正確顯示流程圖。無論怎麼修改  <code>_config.yml</code>  的配置，其永遠都是死死地顯示純文字的格式。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#96;&#96;&#96;mermaid</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>graph LR</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    A[Square Rect] -- Link text --&gt; B((Circle))</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    A --&gt; C(Round Rect)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    B --&gt; D&#123;Rhombus&#125;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    C --&gt; D</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#96;&#96;&#96;mermaid</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sequenceDiagram</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    loop Daily query</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        Alice-&gt;&gt;Bob: Hello Bob, how are you?</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        alt is sick</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            Bob-&gt;&gt;Alice: Not so good :(</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        else is well</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            Bob-&gt;&gt;Alice: Feeling fresh like a daisy</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        opt Extra response</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            Bob-&gt;&gt;Alice: Thanks for asking</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        end</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    end</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#96;&#96;&#96;</pre></td></tr></table></figure><p>爬了很久的文，找了很多文章。</p>\n<p>一開始以為應該是 dependency 不正確，或是 css style 沒有載入之類的。<br />\n嘗試了諸多方法依然無解。偏偏官方文檔完全沒有多加說明。</p>\n<p>就在窮盡所有方法之後，決定去爬  <code>mode_modules</code>  中的 source code。<br />\n(就乖乖的 console.log 看看吧！)</p>\n<p>幸好這個 Plugin 的 code 不長，很快就定位到了實際運作的位置</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"><span>hexo-renderer-multi-markdown-it/lib/renderer/markdown-it-mermaid</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>md<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">fence</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">tokens<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> env<span class=\"token punctuation\">,</span> self</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">const</span> token <span class=\"token operator\">=</span> tokens<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">const</span> code <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span>content<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>info <span class=\"token operator\">===</span> <span class=\"token string\">'mermaid'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">var</span> firstLine <span class=\"token operator\">=</span> code<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\n</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>firstLine<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">^graph (?:TB|BT|RL|LR|TD);?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            firstLine <span class=\"token operator\">=</span> <span class=\"token string\">' graph'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            firstLine <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">mermaidChart</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> firstLine<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">defaultRenderer</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> env<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>經過各種的  <code>console.log</code>  之後，終於發現原因！</p>\n<p>原因在於  <code>markdown-it</code>  在針對文章 parse token 時，將 marmaid 的 <span class=\"exturl\" data-url=\"aHR0cDovL3Rva2VuLmluZm8=\">token.info</span> 定義為 <strong> <code>mermaid2</code> </strong>。因此 if condition 一定比對失敗。</p>\n<hr />\n<p>知道了問題點就好辦了，接下來我只需要決定如何修理即可。</p>\n<p>有兩種我比較喜歡的修改方式：</p>\n<ol>\n<li>將  <code>if (token.info === 'mermaid')</code>  改成  <code>if (token.info === 'mermaid2')</code>  ，未來在用的時候統一使用  <code>mermaid2</code></li>\n<li>將  <code>if (token.info === 'mermaid')</code>  改成  <code>if (token.info.includes('mermaid'))</code> ，未來只要 type 有關鍵字 mermaid 即可自動 parse 出 graph。 我也不用管是  <code>mermaid</code>  還是  <code>mermaid2</code> 。</li>\n</ol>\n<hr />\n<p>最終我選擇了第二種方案。</p>\n<p>這兩種方案其實殊途同歸，唯一的問題在於未來在重新佈局時一定要記得手動修改  <code>node_modules</code>  裡的這段 code.</p>\n",
            "tags": [
                "Tech",
                "Hexo",
                "hexo"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Cambly-Lession5/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Cambly-Lession5/",
            "title": "Cambly-Lession4",
            "date_published": "2023-01-04T16:28:40.000Z",
            "content_html": "<ul>\n<li>have foot in the door （ idioms )\n<ul>\n<li>to make the first step toward a goal by gaining entry into an organization, a career, etc. He took a job as a secretary to get his foot in the door.</li>\n</ul>\n</li>\n<li>frequently &gt; often &gt; usually (1 / week).</li>\n<li>I don't know if i have a cold</li>\n<li>coherence = understanding.</li>\n<li>stand on the same topic</li>\n<li>&quot;synonyms&quot; is the difference word in the same meaning.</li>\n<li>standardized = cause (something) to conform to a standard.\n<ul>\n<li>&quot;we could standardize on U.S. equipment&quot;.</li>\n<li>&quot;the editors failed to standardize the spelling of geographic names&quot;</li>\n</ul>\n</li>\n<li>proficiency = ranking = level</li>\n<li>authorities people or organization in charge of / to take charge of ...</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession6/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Combly-Lession6/",
            "title": "Cambly-Lession6",
            "date_published": "2023-01-04T16:28:40.000Z",
            "content_html": "<ul>\n<li>The country is mostly rural areas.</li>\n<li>I used to live in the country.</li>\n<li>farm fishing</li>\n<li>wild caught</li>\n<li>car pooling: 搭便車</li>\n<li>car sharing program = pay to share a car</li>\n<li></li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Cambly-Lession4/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Cambly-Lession4/",
            "title": "Cambly-Lession4",
            "date_published": "2023-01-04T16:28:40.000Z",
            "content_html": "<ul>\n<li>broadly 寬廣</li>\n<li>to enroll (v.) 編入\n<ul>\n<li>enrollment (n.) = sign up</li>\n</ul>\n</li>\n<li>subject specialist = professor in specific subject.</li>\n<li>take gap year. = 升學階段的休學一年 ex. 高中到大學。大學到研究所中間休息一段時間</li>\n<li>take a (week/month/year) off. = 休息一段時間</li>\n<li>to work sb way through colledge = 半工半讀</li>\n<li>teacher's pet (貶義) 老師的寵兒\n<ul>\n<li>brown noser 馬屁精</li>\n</ul>\n</li>\n<li>to keep up with anythings = don't fall behind.\n<ul>\n<li>ex. are you keeping up with me.</li>\n<li>He could not keep up with the conversation. (He didn't understand.).</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/Cambly-Lession3/",
            "url": "https://z20240.github.io/Life/EnglishLearn/Cambly-Lession3/",
            "title": "Cambly-Lession3",
            "date_published": "2023-01-02T16:28:40.000Z",
            "content_html": "<ul>\n<li>hold back  拖後腿\n<ul>\n<li>I am holding my friends back from winning.</li>\n</ul>\n</li>\n<li>motivated = you really want to do something be cause of th.</li>\n<li>motivation (n.)</li>\n<li>stimulate 刺激\n<ul>\n<li>(someone's) interest in or enthusiasm for doing something.</li>\n</ul>\n</li>\n<li>passionate (adj) = have some belive in th.\n<ul>\n<li>\n<ul>\n<li>ate (adj.)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>enthusiasm (n.) / enthusiastic (adj.) + about</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "Cambly",
                "english",
                "cambly"
            ]
        },
        {
            "id": "https://z20240.github.io/Life/EnglishLearn/IELS%20%E5%AD%97%E5%BD%99/",
            "url": "https://z20240.github.io/Life/EnglishLearn/IELS%20%E5%AD%97%E5%BD%99/",
            "title": "IELS 字彙",
            "date_published": "2023-01-02T16:28:40.000Z",
            "content_html": "<h2 id=\"單字\"><a class=\"anchor\" href=\"#單字\">#</a> 單字</h2>\n<ul>\n<li>prairie (n.) 大草原\n<ul>\n<li>pasturage</li>\n<li>savanna</li>\n<li>grassland  (小) 草原</li>\n<li>pasture\n<ul>\n<li>(v.) 放牧；= graze</li>\n<li>(n.) 牧地</li>\n</ul>\n</li>\n<li>enclosure (en|clos|ure) 圈地飼養</li>\n</ul>\n</li>\n<li>disverse (adj.) = different = discrepant = various = disparate\n<ul>\n<li>di = two</li>\n<li>verse = turn</li>\n</ul>\n</li>\n<li>fertile (adj.) 肥沃的 = arable</li>\n<li>cropland 耕地\n<ul>\n<li>crop (n.) = produce (n.)</li>\n<li>cash crop = 經濟作物</li>\n<li>crop 裁切</li>\n</ul>\n</li>\n<li>landform 地形 = terran</li>\n<li>Medi|terran|ean 地中海的 (adj.)\n<ul>\n<li>Medi = middle</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"字根\"><a class=\"anchor\" href=\"#字根\">#</a> 字根</h3>\n<ul>\n<li>verse / verg = turn\n<ul>\n<li>averse (adj.) = 不喜歡；厭惡的\n<ul>\n<li>a = without</li>\n<li>verse = turn</li>\n</ul>\n</li>\n<li>adverse (adj.) = 不利的；逆向的 + to N\n<ul>\n<li>ad = toward = 朝著</li>\n<li>verse = turn</li>\n</ul>\n</li>\n<li>converse (v.) = (conversation) =  交談 + with N</li>\n<li>inverse (adj.) = 顛倒的；相反地</li>\n<li>reverse (v.) = 逆轉</li>\n<li>traverse (adj.)(v.) = 橫跨的</li>\n<li>divergency (n.) = 歧異 = discrepancy</li>\n</ul>\n</li>\n<li>fertile (adj.)\n<ul>\n<li>= rich</li>\n<li>= productive</li>\n<li>= fecund</li>\n<li>&lt;=&gt; infertile (adj.)\n<ul>\n<li>= barren 不孕的</li>\n<li>= sterile</li>\n<li>= topography</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>ephemeral (adj.) 暫時的；短暫的\n<ul>\n<li>= temporary</li>\n<li>= transient</li>\n<li>= momentary</li>\n<li>= evanescent 短暫的</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "Life",
                "EnglishLearn",
                "english",
                "iels"
            ]
        }
    ]
}